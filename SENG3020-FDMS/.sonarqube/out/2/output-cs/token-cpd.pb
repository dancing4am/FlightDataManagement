à√
`C:\Users\msbra\OneDrive\Code\SENG3020-FDMS\SENG3020-FDMS\GroundTerminal\Controller\Controller.cs
	namespace		 	
GroundTerminal		
 
.		 

Controller		 #
{

 
class 	

Controller
 
: 
IController "
{ 
private 
IModel 
model 
; 
private 
readonly 
object  
socketConnectionData  4
;4 5
private!! 
readonly!! 
object!! "
databaseConnectionData!!  6
;!!6 7
public&& 
event&& 
ReceiveRecords&& #
OnRecordsReceived&&$ 5
;&&5 6
public++ 
event++ 
RecordsSynced++ "%
OnRecordSyncStatusChanged++# <
;++< =
public00 
event00 '
ModelConnectionStateChanged00 0%
OnConnectionStatusChanged001 J
;00J K
public55 
event55 
ErrorThrown55  
OnErrorInModel55! /
;55/ 0
private:: 
List:: 
<:: 
TelemetryRecord:: $
>::$ %
unsyncedRecords::& 5
;::5 6
private?? 
	DataTable?? 
realtimeDataTable?? +
;??+ ,
publicFF 

ControllerFF 
(FF 
)FF 
{GG 	
unsyncedRecordsHH 
=HH 
newHH !
ListHH" &
<HH& '
TelemetryRecordHH' 6
>HH6 7
(HH7 8
)HH8 9
;HH9 :"
databaseConnectionDataII "
=II# $
GetConnectionStringII% 8
(II8 9
)II9 :
;II: ; 
socketConnectionDataJJ  
=JJ! "
$strJJ# .
;JJ. /
realtimeDataTableKK 
=KK $
ConfigureDataTableSchemaKK  8
(KK8 9
)KK9 :
;KK: ;
}LL 	
publicRR 
voidRR 
SetModelRR 
(RR 
IModelRR #
modelRR$ )
)RR) *
{SS 	
thisTT 
.TT 
modelTT 
=TT 
modelTT 
;TT 
}UU 	
publicbb 
voidbb "
ToggleSocketConnectionbb *
(bb* +
boolbb+ /
openConnectionbb0 >
)bb> ?
{cc 	
ifdd 
(dd 
openConnectiondd 
)dd 
{ee 
modelgg 
.gg 
HandleRequestgg #
(gg# $
RequestBuildergg$ 2
.gg2 3 
BuildConnectToSocketgg3 G
(ggG H'
InitalizationRequestHandlerggH c
,ggc d 
socketConnectionDatagge y
,ggy z)
ReceiveRecordsRequestHandler	gg{ ó
)
ggó ò
)
ggò ô
;
ggô ö
}hh 
elseii 
{jj 
modelkk 
.kk 
HandleRequestkk #
(kk# $
RequestBuilderkk$ 2
.kk2 3%
BuildDisconnectFromSocketkk3 L
(kkL M'
InitalizationRequestHandlerkkM h
)kkh i
)kki j
;kkj k
}ll 
}mm 	
publictt 
voidtt #
CheckDatabaseConnectiontt +
(tt+ ,
booltt, 0
openConnectiontt1 ?
)tt? @
{uu 	
modelvv 
.vv 
HandleRequestvv 
(vv  
RequestBuildervv  .
.vv. /(
BuildCheckDatabaseConnectionvv/ K
(vvK L'
InitalizationRequestHandlervvL g
,vvg h
openConnectionvvi w
,vvw x#
databaseConnectionData	vvy è
)
vvè ê
)
vvê ë
;
vvë í
}ww 	
public~~ 
void~~ #
ReadRecordsFromDatabase~~ +
(~~+ ,
RecordParameters~~, <
recordParameters~~= M
)~~M N
{ 	
model
ÄÄ 
.
ÄÄ 
HandleRequest
ÄÄ 
(
ÄÄ  
RequestBuilder
ÄÄ  .
.
ÄÄ. /#
BuildReadFromDatabase
ÄÄ/ D
(
ÄÄD E*
ReceiveRecordsRequestHandler
ÄÄE a
,
ÄÄa b
recordParameters
ÄÄc s
)
ÄÄs t
)
ÄÄt u
;
ÄÄu v
}
ÅÅ 	
public
àà 
void
àà #
WriteRecordToDatabase
àà )
(
àà) *
List
àà* .
<
àà. /
TelemetryRecord
àà/ >
>
àà> ?
records
àà@ G
)
ààG H
{
ââ 	
model
ää 
.
ää 
HandleRequest
ää 
(
ää  
RequestBuilder
ää  .
.
ää. /"
BuildWriteToDatabase
ää/ C
(
ääC D&
RecordsWrittenToDatabase
ääD \
,
ää\ ]
records
ää^ e
)
ääe f
)
ääf g
;
ääg h
}
ãã 	
private
ôô 
void
ôô )
InitalizationRequestHandler
ôô 0
(
ôô0 1
object
ôô1 7
sender
ôô8 >
,
ôô> ?
	EventArgs
ôô@ I
	eventArgs
ôôJ S
)
ôôS T
{
öö 	
if
úú 
(
úú 
ArgsAreError
úú 
(
úú 
sender
úú #
,
úú# $
	eventArgs
úú% .
)
úú. /
)
úú/ 0
{
ùù 
return
ûû 
;
ûû 
}
üü 
if
¢¢ 
(
¢¢ 
!
¢¢ 
(
¢¢ 
	eventArgs
¢¢ 
is
¢¢ %
InitializationEventArgs
¢¢ 5
initArgs
¢¢6 >
)
¢¢> ?
)
¢¢? @
{
££ !
ErrorRequestHandler
§§ #
(
§§# $
this
§§$ (
,
§§( )
new
§§* -
ErrorEventArgs
§§. <
(
§§< =
$"
§§= ?
$str
§§? 
{§§ Ä
	eventArgs§§Ä â
.§§â ä
GetType§§ä ë
(§§ë í
)§§í ì
}§§ì î
"§§î ï
)§§ï ñ
)§§ñ ó
;§§ó ò
return
•• 
;
•• 
}
¶¶ 
switch
®® 
(
®® 
initArgs
®® 
.
®® !
ModelConnectionType
®® 0
)
®®0 1
{
©© 
case
™™ "
ModelConnectionTypes
™™ )
.
™™) *
Socket
™™* 0
:
™™0 1'
OnConnectionStatusChanged
´´ -
?
´´- .
.
´´. /
Invoke
´´/ 5
(
´´5 6
initArgs
´´6 >
.
´´> ?!
ModelConnectionType
´´? R
,
´´R S
initArgs
´´T \
.
´´\ ]
ConnectionOpened
´´] m
)
´´m n
;
´´n o
break
¨¨ 
;
¨¨ 
case
ÆÆ "
ModelConnectionTypes
ÆÆ )
.
ÆÆ) *
Database
ÆÆ* 2
:
ÆÆ2 3'
OnConnectionStatusChanged
ØØ -
?
ØØ- .
.
ØØ. /
Invoke
ØØ/ 5
(
ØØ5 6
initArgs
ØØ6 >
.
ØØ> ?!
ModelConnectionType
ØØ? R
,
ØØR S
initArgs
ØØT \
.
ØØ\ ]
ConnectionOpened
ØØ] m
)
ØØm n
;
ØØn o
if
≤≤ 
(
≤≤ 
initArgs
≤≤ 
.
≤≤  
ConnectionOpened
≤≤  0
&&
≤≤1 3
unsyncedRecords
≤≤4 C
.
≤≤C D
Count
≤≤D I
>
≤≤J K
$num
≤≤L M
)
≤≤M N
{
≥≥ #
WriteRecordToDatabase
¥¥ -
(
¥¥- .
unsyncedRecords
¥¥. =
)
¥¥= >
;
¥¥> ?
}
µµ 
break
∂∂ 
;
∂∂ 
default
∏∏ 
:
∏∏ !
ErrorRequestHandler
ππ '
(
ππ' (
this
ππ( ,
,
ππ, -
new
ππ. 1
ErrorEventArgs
ππ2 @
(
ππ@ A
$"
ππA C
$strππC ï
{ππï ñ
initArgsππñ û
.ππû ü#
ModelConnectionTypeππü ≤
}ππ≤ ≥
"ππ≥ ¥
)ππ¥ µ
)ππµ ∂
;ππ∂ ∑
break
∫∫ 
;
∫∫ 
}
ªª 
}
ºº 	
private
∆∆ 
void
∆∆ *
ReceiveRecordsRequestHandler
∆∆ 1
(
∆∆1 2
object
∆∆2 8
sender
∆∆9 ?
,
∆∆? @
	EventArgs
∆∆A J
	eventArgs
∆∆K T
)
∆∆T U
{
«« 	
if
…… 
(
…… 
ArgsAreError
…… 
(
…… 
sender
…… #
,
……# $
	eventArgs
……% .
)
……. /
)
……/ 0
{
   
return
ÀÀ 
;
ÀÀ 
}
ÃÃ 
if
œœ 
(
œœ 
!
œœ 
(
œœ 
	eventArgs
œœ 
is
œœ "
RecordsReadEventArgs
œœ 3
recordsArgs
œœ4 ?
)
œœ? @
)
œœ@ A
{
–– !
ErrorRequestHandler
—— #
(
——# $
this
——$ (
,
——( )
new
——* -
ErrorEventArgs
——. <
(
——< =
$"
——= ?
$str——? Ä
{——Ä Å
	eventArgs——Å ä
.——ä ã
GetType——ã í
(——í ì
)——ì î
}——î ï
"——ï ñ
)——ñ ó
)——ó ò
;——ò ô
return
““ 
;
““ 
}
”” 
switch
’’ 
(
’’ 
recordsArgs
’’ 
.
’’  
ConnectionType
’’  .
)
’’. /
{
÷÷ 
case
◊◊ "
ModelConnectionTypes
◊◊ )
.
◊◊) *
Socket
◊◊* 0
:
◊◊0 1
if
ŸŸ 
(
ŸŸ 
recordsArgs
ŸŸ #
.
ŸŸ# $
Records
ŸŸ$ +
is
ŸŸ, .
List
ŸŸ/ 3
<
ŸŸ3 4
TelemetryRecord
ŸŸ4 C
>
ŸŸC D
records
ŸŸE L
)
ŸŸL M
{
ŸŸN O#
WriteRecordToDatabase
⁄⁄ -
(
⁄⁄- .
records
⁄⁄. 5
)
⁄⁄5 6
;
⁄⁄6 7
Console
€€ 
.
€€  
	WriteLine
€€  )
(
€€) *
$str
€€* V
)
€€V W
;
€€W X
foreach
ﬁﬁ 
(
ﬁﬁ  !
TelemetryRecord
ﬁﬁ! 0
record
ﬁﬁ1 7
in
ﬁﬁ8 :
records
ﬁﬁ; B
)
ﬁﬁB C
{
ﬂﬂ &
AddRecordToRealtimeTable
‡‡ 4
(
‡‡4 5
realtimeDataTable
‡‡5 F
,
‡‡F G
record
‡‡H N
)
‡‡N O
;
‡‡O P
}
·· 
OnRecordsReceived
„„ )
?
„„) *
.
„„* +
Invoke
„„+ 1
(
„„1 2"
ModelConnectionTypes
„„2 F
.
„„F G
Socket
„„G M
,
„„M N
realtimeDataTable
„„O `
)
„„` a
;
„„a b
}
‰‰ 
else
ÂÂ 
{
ÊÊ !
ErrorRequestHandler
ÁÁ +
(
ÁÁ+ ,
this
ÁÁ, 0
,
ÁÁ0 1
new
ËË 
ErrorEventArgs
ËË  .
(
ËË. /
$"
ËË/ 1
$str
ËË1 v
{
ËËv w
recordsArgsËËw Ç
.ËËÇ É
RecordsËËÉ ä
.ËËä ã
GetTypeËËã í
(ËËí ì
)ËËì î
}ËËî ï
"ËËï ñ
)ËËñ ó
)ËËó ò
;ËËò ô
}
ÈÈ 
break
ÎÎ 
;
ÎÎ 
case
ÌÌ "
ModelConnectionTypes
ÌÌ )
.
ÌÌ) *
Database
ÌÌ* 2
:
ÌÌ2 3*
WriteDataTableToTelemetryLog
ÓÓ 0
(
ÓÓ0 1
recordsArgs
ÓÓ1 <
)
ÓÓ< =
;
ÓÓ= >
OnRecordsReceived
ÔÔ %
?
ÔÔ% &
.
ÔÔ& '
Invoke
ÔÔ' -
(
ÔÔ- ."
ModelConnectionTypes
ÔÔ. B
.
ÔÔB C
Database
ÔÔC K
,
ÔÔK L
recordsArgs
ÔÔM X
.
ÔÔX Y
Records
ÔÔY `
)
ÔÔ` a
;
ÔÔa b
break
 
;
 
}
ÒÒ 
}
ÚÚ 	
private
˘˘ 
void
˘˘ *
WriteDataTableToTelemetryLog
˘˘ 1
(
˘˘1 2"
RecordsReadEventArgs
˘˘2 F
args
˘˘G K
)
˘˘K L
{
˘˘M N
if
˚˚ 
(
˚˚ 
args
˚˚ 
.
˚˚ 
Records
˚˚ 
!=
˚˚ 
null
˚˚  $
)
˚˚$ %
{
¸¸ 
	DataTable
˝˝ 
table
˝˝ 
=
˝˝  !
args
˝˝" &
.
˝˝& '
Records
˝˝' .
as
˝˝/ 1
	DataTable
˝˝2 ;
;
˝˝; <
if
˛˛ 
(
˛˛ 
table
˛˛ 
!=
˛˛ 
null
˛˛ !
)
˛˛! "
{
ˇˇ 
foreach
ÄÄ 
(
ÄÄ 
DataRow
ÄÄ $
row
ÄÄ% (
in
ÄÄ) +
table
ÄÄ, 1
.
ÄÄ1 2
Rows
ÄÄ2 6
)
ÄÄ6 7
{
ÅÅ 
object
ÇÇ 
[
ÇÇ 
]
ÇÇ  
array
ÇÇ! &
=
ÇÇ' (
row
ÇÇ) ,
.
ÇÇ, -
	ItemArray
ÇÇ- 6
;
ÇÇ6 7
if
ÑÑ 
(
ÑÑ 
array
ÑÑ !
!=
ÑÑ" $
null
ÑÑ% )
&&
ÑÑ* ,
array
ÑÑ- 2
.
ÑÑ2 3
Length
ÑÑ3 9
>=
ÑÑ: <
$num
ÑÑ= ?
)
ÑÑ? @
{
ÖÖ 
TelemetryRecord
ÜÜ +
record
ÜÜ, 2
=
ÜÜ3 4
new
ÜÜ5 8
TelemetryRecord
ÜÜ9 H
(
ÜÜH I
)
ÜÜI J
;
ÜÜJ K
record
áá "
.
áá" #

TailNumber
áá# -
=
áá. /
array
áá0 5
[
áá5 6
$num
áá6 7
]
áá7 8
.
áá8 9
ToString
áá9 A
(
ááA B
)
ááB C
;
ááC D
record
àà "
.
àà" #
	Timestamp
àà# ,
=
àà- .
array
àà/ 4
[
àà4 5
$num
àà5 6
]
àà6 7
.
àà7 8
ToString
àà8 @
(
àà@ A
)
ààA B
;
ààB C
record
ââ "
.
ââ" #
StoredTimestamp
ââ# 2
=
ââ3 4
array
ââ5 :
[
ââ: ;
$num
ââ; <
]
ââ< =
.
ââ= >
ToString
ââ> F
(
ââF G
)
ââG H
;
ââH I
record
ää "
.
ää" #
AccelX
ää# )
=
ää* +
array
ää, 1
[
ää1 2
$num
ää2 3
]
ää3 4
.
ää4 5
ToString
ää5 =
(
ää= >
)
ää> ?
;
ää? @
record
ãã "
.
ãã" #
AccelY
ãã# )
=
ãã* +
array
ãã, 1
[
ãã1 2
$num
ãã2 3
]
ãã3 4
.
ãã4 5
ToString
ãã5 =
(
ãã= >
)
ãã> ?
;
ãã? @
record
åå "
.
åå" #
AccelZ
åå# )
=
åå* +
array
åå, 1
[
åå1 2
$num
åå2 3
]
åå3 4
.
åå4 5
ToString
åå5 =
(
åå= >
)
åå> ?
;
åå? @
record
çç "
.
çç" #
Weight
çç# )
=
çç* +
array
çç, 1
[
çç1 2
$num
çç2 3
]
çç3 4
.
çç4 5
ToString
çç5 =
(
çç= >
)
çç> ?
;
çç? @
record
éé "
.
éé" #
Altitude
éé# +
=
éé, -
array
éé. 3
[
éé3 4
$num
éé4 5
]
éé5 6
.
éé6 7
ToString
éé7 ?
(
éé? @
)
éé@ A
;
ééA B
record
èè "
.
èè" #
Pitch
èè# (
=
èè) *
array
èè+ 0
[
èè0 1
$num
èè1 2
]
èè2 3
.
èè3 4
ToString
èè4 <
(
èè< =
)
èè= >
;
èè> ?
record
êê "
.
êê" #
Bank
êê# '
=
êê( )
array
êê* /
[
êê/ 0
$num
êê0 1
]
êê1 2
.
êê2 3
ToString
êê3 ;
(
êê; <
)
êê< =
;
êê= >
SimpleLogger
íí (
.
íí( )
TelemetryLog
íí) 5
.
íí5 6
LogTelemetry
íí6 B
(
ííB C
record
ííC I
)
ííI J
;
ííJ K
}
ìì 
}
ïï 
}
ññ 
}
óó 
}
òò 	
private
üü 
void
üü &
RecordsWrittenToDatabase
üü -
(
üü- .
object
üü. 4
sender
üü5 ;
,
üü; <
	EventArgs
üü= F
	eventArgs
üüG P
)
üüP Q
{
†† 	
if
¢¢ 
(
¢¢ 
ArgsAreError
¢¢ 
(
¢¢ 
sender
¢¢ #
,
¢¢# $
	eventArgs
¢¢% .
)
¢¢. /
)
¢¢/ 0
{
££ 
return
§§ 
;
§§ 
}
•• 
if
ßß 
(
ßß 
!
ßß 
(
ßß 
	eventArgs
ßß 
is
ßß %
RecordsWrittenEventArgs
ßß 5
written
ßß6 =
)
ßß= >
)
ßß> ?
{
®® !
ErrorRequestHandler
©© #
(
©©# $
this
©©$ (
,
©©( )
new
©©* -
ErrorEventArgs
©©. <
(
©©< =
$"
©©= ?
$str
©©? |
{
©©| }
	eventArgs©©} Ü
.©©Ü á
GetType©©á é
(©©é è
)©©è ê
}©©ê ë
"©©ë í
)©©í ì
)©©ì î
;©©î ï
return
™™ 
;
™™ 
}
´´ #
UpdateUnsyncedRecords
≠≠ !
(
≠≠! "
written
≠≠" )
.
≠≠) *
Records
≠≠* 1
)
≠≠1 2
;
≠≠2 3'
OnRecordSyncStatusChanged
ØØ %
?
ØØ% &
.
ØØ& '
Invoke
ØØ' -
(
ØØ- .
written
ØØ. 5
.
ØØ5 6
Records
ØØ6 =
)
ØØ= >
;
ØØ> ?
}
∞∞ 	
private
ªª 
bool
ªª 
ArgsAreError
ªª !
(
ªª! "
object
ªª" (
sender
ªª) /
,
ªª/ 0
	EventArgs
ªª1 :
	eventArgs
ªª; D
)
ªªD E
{
ºº 	
if
ææ 
(
ææ 
	eventArgs
ææ 
is
ææ 
ErrorEventArgs
ææ +
	errorArgs
ææ, 5
)
ææ5 6
{
øø !
ErrorRequestHandler
¿¿ #
(
¿¿# $
sender
¿¿$ *
,
¿¿* +
	errorArgs
¿¿, 5
)
¿¿5 6
;
¿¿6 7
return
¡¡ 
true
¡¡ 
;
¡¡ 
}
¬¬ 
return
ƒƒ 
false
ƒƒ 
;
ƒƒ 
}
≈≈ 	
private
ÃÃ 
void
ÃÃ !
ErrorRequestHandler
ÃÃ (
(
ÃÃ( )
object
ÃÃ) /
sender
ÃÃ0 6
,
ÃÃ6 7
ErrorEventArgs
ÃÃ8 F
	errorArgs
ÃÃG P
)
ÃÃP Q
{
ÕÕ 	
Console
–– 
.
–– 
	WriteLine
–– 
(
–– 
	errorArgs
–– '
.
––' (
ErrorMessage
––( 4
)
––4 5
;
––5 6
OnErrorInModel
—— 
?
—— 
.
—— 
Invoke
—— "
(
——" #
	errorArgs
——# ,
.
——, -
ErrorMessage
——- 9
)
——9 :
;
——: ;
}
““ 	
private
ŸŸ 
void
ŸŸ #
UpdateUnsyncedRecords
ŸŸ *
(
ŸŸ* +
List
ŸŸ+ /
<
ŸŸ/ 0
(
ŸŸ0 1
TelemetryRecord
ŸŸ1 @
record
ŸŸA G
,
ŸŸG H
bool
ŸŸI M

wasWritten
ŸŸN X
)
ŸŸX Y
>
ŸŸY Z
records
ŸŸ[ b
)
ŸŸb c
{
⁄⁄ 	
for
€€ 
(
€€ 
int
€€ 
i
€€ 
=
€€ 
$num
€€ 
;
€€ 
i
€€ 
<
€€ 
records
€€  '
.
€€' (
Count
€€( -
;
€€- .
i
€€/ 0
++
€€0 2
)
€€2 3
{
‹‹ 
if
›› 
(
›› 
records
›› 
[
›› 
i
›› 
]
›› 
.
›› 

wasWritten
›› )
&&
››* ,
unsyncedRecords
››- <
.
››< =
Contains
››= E
(
››E F
records
››F M
[
››M N
i
››N O
]
››O P
.
››P Q
record
››Q W
)
››W X
)
››X Y
{
ﬁﬁ 
unsyncedRecords
ﬂﬂ #
.
ﬂﬂ# $
Remove
ﬂﬂ$ *
(
ﬂﬂ* +
records
ﬂﬂ+ 2
[
ﬂﬂ2 3
i
ﬂﬂ3 4
]
ﬂﬂ4 5
.
ﬂﬂ5 6
record
ﬂﬂ6 <
)
ﬂﬂ< =
;
ﬂﬂ= >
}
‡‡ 
else
·· 
if
·· 
(
·· 
!
·· 
records
·· !
[
··! "
i
··" #
]
··# $
.
··$ %

wasWritten
··% /
&&
··0 2
!
··3 4
unsyncedRecords
··4 C
.
··C D
Contains
··D L
(
··L M
records
··M T
[
··T U
i
··U V
]
··V W
.
··W X
record
··X ^
)
··^ _
)
··_ `
{
‚‚ 
unsyncedRecords
„„ #
.
„„# $
Add
„„$ '
(
„„' (
records
„„( /
[
„„/ 0
i
„„0 1
]
„„1 2
.
„„2 3
record
„„3 9
)
„„9 :
;
„„: ;
}
‰‰ 
}
ÂÂ 
Console
ÁÁ 
.
ÁÁ 
	WriteLine
ÁÁ 
(
ÁÁ 
$str
ÁÁ 7
+
ÁÁ8 9
unsyncedRecords
ÁÁ: I
.
ÁÁI J
Count
ÁÁJ O
)
ÁÁO P
;
ÁÁP Q
}
ËË 	
public
ÓÓ 
static
ÓÓ 
string
ÓÓ !
GetConnectionString
ÓÓ 0
(
ÓÓ0 1
)
ÓÓ1 2
{
ÔÔ 	
try
 
{
ÒÒ 
return
ÚÚ "
ConfigurationManager
ÚÚ +
.
ÚÚ+ ,
ConnectionStrings
ÚÚ, =
[
ÚÚ= >
$str
ÚÚ> Q
]
ÚÚQ R
.
ÚÚR S
ConnectionString
ÚÚS c
;
ÚÚc d
}
ÛÛ 
catch
ÙÙ 
(
ÙÙ 
	Exception
ÙÙ 
)
ÙÙ 
{
ıı 
Console
ˆˆ 
.
ˆˆ 
	WriteLine
ˆˆ !
(
ˆˆ! "
$"
ˆˆ" $
$str
ˆˆ$ `
"
ˆˆ` a
)
ˆˆa b
;
ˆˆb c
}
˜˜ 
return
˘˘ 
string
˘˘ 
.
˘˘ 
Empty
˘˘ 
;
˘˘  
}
˙˙ 	
private
ÄÄ 
	DataTable
ÄÄ &
ConfigureDataTableSchema
ÄÄ 2
(
ÄÄ2 3
)
ÄÄ3 4
{
ÅÅ 	
	DataTable
ÇÇ 
table
ÇÇ 
=
ÇÇ 
new
ÇÇ !
	DataTable
ÇÇ" +
(
ÇÇ+ ,
)
ÇÇ, -
;
ÇÇ- .
table
ÑÑ 
.
ÑÑ 
Columns
ÑÑ 
.
ÑÑ 
AddRange
ÑÑ "
(
ÑÑ" #
new
ÑÑ# &

DataColumn
ÑÑ' 1
[
ÑÑ1 2
]
ÑÑ2 3
{
ÖÖ 
new
ÜÜ 

DataColumn
ÜÜ 
(
ÜÜ 
$str
ÜÜ ,
)
ÜÜ, -
,
ÜÜ- .
new
áá 

DataColumn
áá 
(
áá 
$str
áá *
)
áá* +
,
áá+ ,
new
àà 

DataColumn
àà 
(
àà 
$str
àà /
)
àà/ 0
,
àà0 1
new
ââ 

DataColumn
ââ 
(
ââ 
$str
ââ /
)
ââ/ 0
,
ââ0 1
new
ää 

DataColumn
ää 
(
ää 
$str
ää /
)
ää/ 0
,
ää0 1
new
ãã 

DataColumn
ãã 
(
ãã 
$str
ãã '
)
ãã' (
,
ãã( )
new
åå 

DataColumn
åå 
(
åå 
$str
åå )
)
åå) *
,
åå* +
new
çç 

DataColumn
çç 
(
çç 
$str
çç &
)
çç& '
,
çç' (
new
éé 

DataColumn
éé 
(
éé 
$str
éé %
)
éé% &
}
èè 
)
èè 
;
èè 
return
ëë 
table
ëë 
;
ëë 
}
íí 	
private
ôô 
void
ôô &
AddRecordToRealtimeTable
ôô -
(
ôô- .
	DataTable
ôô. 7
table
ôô8 =
,
ôô= >
TelemetryRecord
ôô? N
record
ôôO U
)
ôôU V
{
öö 	
DataRow
õõ 
row
õõ 
=
õõ 
table
õõ 
.
õõ  
Rows
õõ  $
.
õõ$ %
Add
õõ% (
(
õõ( )
new
úú 
string
úú 
[
úú 
]
úú 
{
úú 
record
ùù 
.
ùù 

TailNumber
ùù %
,
ùù% &
record
ûû 
.
ûû 
	Timestamp
ûû $
,
ûû$ %
record
üü 
.
üü 
AccelX
üü !
,
üü! "
record
†† 
.
†† 
AccelY
†† !
,
††! "
record
°° 
.
°° 
AccelZ
°° !
,
°°! "
record
¢¢ 
.
¢¢ 
Weight
¢¢ !
,
¢¢! "
record
££ 
.
££ 
Altitude
££ #
,
££# $
record
§§ 
.
§§ 
Pitch
§§  
,
§§  !
record
•• 
.
•• 
Bank
•• 
}
¶¶ 
)
¶¶ 
;
¶¶ 
}
ßß 	
}
®® 
}©© æ
nC:\Users\msbra\OneDrive\Code\SENG3020-FDMS\SENG3020-FDMS\GroundTerminal\EventArguments\RecordsReadEventArgs.cs
	namespace 	
GroundTerminal
 
. 
EventArguments '
{ 
class		 	 
RecordsReadEventArgs		
 
:		  
	EventArgs		! *
{

 
public 
readonly 
object 
Records &
;& '
public 
readonly  
ModelConnectionTypes ,
ConnectionType- ;
;; <
public  
RecordsReadEventArgs #
(# $ 
ModelConnectionTypes$ 8
connectionType9 G
,G H
objectI O
recordsP W
)W X
{ 	
ConnectionType 
= 
connectionType +
;+ ,
Records 
= 
records 
; 
} 	
} 
} É
qC:\Users\msbra\OneDrive\Code\SENG3020-FDMS\SENG3020-FDMS\GroundTerminal\EventArguments\RecordsWrittenEventArgs.cs
	namespace 	
GroundTerminal
 
. 
EventArguments '
{ 
class 	#
RecordsWrittenEventArgs
 !
:" #
	EventArgs$ -
{ 
public 
readonly 
List 
< 
( 
TelemetryRecord -
record. 4
,4 5
bool6 :
writtenToDatabase; L
)L M
>M N
RecordsO V
;V W
public #
RecordsWrittenEventArgs &
(& '
List' +
<+ ,
(, -
TelemetryRecord- <
record= C
,C D
boolE I
writtenToDatabaseJ [
)[ \
>\ ]
records^ e
)e f
{ 	
Records 
= 
records 
; 
} 	
} 
} ∂
RC:\Users\msbra\OneDrive\Code\SENG3020-FDMS\SENG3020-FDMS\GroundTerminal\Helpers.cs
	namespace 	
GroundTerminal
 
{ 
internal 
delegate 
void 
RequestDelegate *
(* +
object+ 1
sender2 8
,8 9
	EventArgs: C
	eventArgsD M
)M N
;N O
internal		 
delegate		 
void		 '
ModelConnectionStateChanged		 6
(		6 7 
ModelConnectionTypes		7 K
connectionType		L Z
,		Z [
bool		\ `
	connected		a j
)		j k
;		k l
internal 
delegate 
void 
ReceiveRecords )
() * 
ModelConnectionTypes* >
connectionType? M
,M N
objectO U
recordsV ]
)] ^
;^ _
internal 
delegate 
void 
RecordsSynced (
(( )
List) -
<- .
(. /
TelemetryRecord/ >
record? E
,E F
boolG K
isSyncedL T
)T U
>U V
recordSyncStatusW g
)g h
;h i
internal 
delegate 
void 
ErrorThrown &
(& '
string' -
errorMessage. :
): ;
;; <
internal 
enum  
ModelConnectionTypes &
{ 
Socket 
, 
Database 
} 
internal 
static 
class 
	Constants #
{ 
public 
const 
int 
STATUS_MAX_LEN '
=( )
$num* -
;- .
} 
} Ù
hC:\Users\msbra\OneDrive\Code\SENG3020-FDMS\SENG3020-FDMS\GroundTerminal\EventArguments\ErrorEventArgs.cs
	namespace 	
GroundTerminal
 
. 
EventArguments '
{ 
class		 	
ErrorEventArgs		
 
:		 
	EventArgs		 $
{

 
public 
string 
ErrorMessage "
{# $
get% (
;( )
private* 1
set2 5
;5 6
}7 8
public 
ErrorEventArgs 
( 
string $
errorMessage% 1
)1 2
{ 	
ErrorMessage 
= 
errorMessage '
;' (
} 	
} 
} ët
SC:\Users\msbra\OneDrive\Code\SENG3020-FDMS\SENG3020-FDMS\GroundTerminal\GTS_View.cs
	namespace 	
GroundTerminal
 
{ 
internal 
partial 
class 
GTS_View #
:$ %
Form& *
,+ ,
IGTView- 4
{ 
private 
IController 
_controller '
;' (
private 
bool 
RealTimeModeEnabled (
;( )
public 
GTS_View 
( 
) 
{ 	
InitializeComponent 
(  
)  !
;! "
} 	
public!! 
GTS_View!! 
(!! 

Controller!! "
.!!" #
IController!!# .
ctrl!!/ 3
)!!3 4
{"" 	
InitializeComponent## 
(##  
)##  !
;##! "
SetController$$ 
($$ 
ctrl$$ 
)$$ 
;$$  
UpdateStatusLabel&& 
(&& 
$str&& :
)&&: ;
;&&; <
}'' 	
private.. 
void.. 
btn_search_Click.. %
(..% &
object..& ,
sender..- 3
,..3 4
	EventArgs..5 >
e..? @
)..@ A
{// 	
string00 
tailNum00 
=00 

txtbx_tail00 '
.00' (
Text00( ,
;00, -
string11 
	startDate11 
=11 
dtPick_start11 +
.11+ ,
Value11, 1
.111 2
ToShortDateString112 C
(11C D
)11D E
;11E F
string22 
endDate22 
=22 

dtPick_end22 '
.22' (
Value22( -
.22- .
ToShortDateString22. ?
(22? @
)22@ A
;22A B
RecordParameters44 

parameters44 '
=44( )
new44* -
RecordParameters44. >
(44> ?
)44? @
{55 

TailNumber66 
=66 
tailNum66 $
,66$ %
	StartDate77 
=77 
	startDate77 %
,77% &
EndDate88 
=88 
endDate88 !
}99 
;99 &
RequestRecordsFromDatabase;; &
(;;& '

parameters;;' 1
);;1 2
;;;2 3
}<< 	
privateCC 
voidCC '
chk_enableRt_CheckedChangedCC 0
(CC0 1
objectCC1 7
senderCC8 >
,CC> ?
	EventArgsCC@ I
eCCJ K
)CCK L
{DD 	
RealTimeModeEnabledEE 
=EE  !
chk_enableRtEE" .
.EE. /
CheckedEE/ 6
;EE6 7
}FF 	
publicLL 
voidLL 
SetControllerLL !
(LL! "
IControllerLL" -

controllerLL. 8
)LL8 9
{MM 	
thisNN 
.NN 
_controllerNN 
=NN 

controllerNN )
;NN) *

controllerQQ 
.QQ %
OnConnectionStatusChangedQQ 0
+=QQ1 3+
HandleOnConnectionStatusChangedQQ4 S
;QQS T

controllerRR 
.RR 
OnRecordsReceivedRR (
+=RR) +#
HandleOnRecordsReceivedRR, C
;RRC D

controllerSS 
.SS %
OnRecordSyncStatusChangedSS 0
+=SS1 3+
HandleOnRecordSyncStatusChangedSS4 S
;SSS T

controllerTT 
.TT 
OnErrorInModelTT %
+=TT& ( 
HandleOnErrorInModelTT) =
;TT= >
TaskVV 
.VV 
RunVV 
(VV 
(VV 
)VV 
=>VV 

controllerVV %
.VV% &#
CheckDatabaseConnectionVV& =
(VV= >
trueVV> B
)VVB C
)VVC D
;VVD E
}WW 	
private]] 
void]] +
HandleOnConnectionStatusChanged]] 4
(]]4 5 
ModelConnectionTypes]]5 I
modelConnection]]J Y
,]]Y Z
bool]][ _
connectionOpened]]` p
)]]p q
{^^ 	
string__ 
update__ 
=__ 
$"__ 
{__ 
modelConnection__  /
}__0 1
$str__1 @
{__@ A
(__B C
connectionOpened__C S
?__T U
$str__V \
:__] ^
$str___ g
)__g h
}__i j
"__j k
;__k l
lbl_connStatusInfo`` 
.`` 
Text`` #
=``$ %
update``& ,
;``, -
Invokeaa 
(aa 
newaa 
Actionaa 
(aa 
(aa 
)aa  
=>aa! #
lbl_connStatusInfoaa$ 6
.aa6 7
Visibleaa7 >
=aa? @
trueaaA E
)aaE F
)aaF G
;aaG H
lbl_connStatusInfocc 
.cc 
	ForeColorcc (
=cc) *
(cc+ ,
connectionOpenedcc, <
)cc< =
?cc> ?
Colorcc@ E
.ccE F
	DarkGreenccF O
:ccP Q
ColorccR W
.ccW X
DarkRedccX _
;cc_ `
UpdateStatusLabelee 
(ee 
updateee $
)ee$ %
;ee% &
}ff 	
publicmm 
voidmm &
RequestRecordsFromDatabasemm .
(mm. /
RecordParametersmm/ ?
recordParametersmm@ P
)mmP Q
{nn 	
_controlleroo 
.oo #
ReadRecordsFromDatabaseoo /
(oo/ 0
recordParametersoo0 @
)oo@ A
;ooA B
}pp 	
private{{ 
void{{ #
HandleOnRecordsReceived{{ ,
({{, - 
ModelConnectionTypes{{- A
connectionTypes{{B Q
,{{Q R
object{{S Y
records{{Z a
){{a b
{|| 	
string}} 
output}} 
=}} 
$"}} 
$str}} F
{}}F G
connectionTypes}}G V
}}}V W
"}}W X
;}}X Y
int~~ 
result~~ 
=~~ 
$num~~ 
;~~ 
switch
ÄÄ 
(
ÄÄ 
connectionTypes
ÄÄ #
)
ÄÄ# $
{
ÅÅ 
case
ÇÇ "
ModelConnectionTypes
ÇÇ )
.
ÇÇ) *
Socket
ÇÇ* 0
:
ÇÇ0 1
result
ÉÉ 
=
ÉÉ %
UpdateRecordsInRealTime
ÉÉ 4
(
ÉÉ4 5
records
ÉÉ5 <
)
ÉÉ< =
;
ÉÉ= >
break
ÑÑ 
;
ÑÑ 
case
ÖÖ "
ModelConnectionTypes
ÖÖ )
.
ÖÖ) *
Database
ÖÖ* 2
:
ÖÖ2 3
result
ÜÜ 
=
ÜÜ %
UpdateRecordsFromSearch
ÜÜ 4
(
ÜÜ4 5
records
ÜÜ5 <
)
ÜÜ< =
;
ÜÜ= >
break
áá 
;
áá 
}
àà 
if
ãã 
(
ãã 
!
ãã 
(
ãã 
connectionTypes
ãã  
==
ãã! #"
ModelConnectionTypes
ãã$ 8
.
ãã8 9
Socket
ãã9 ?
&&
ãã@ B
!
ããC D!
RealTimeModeEnabled
ããD W
)
ããW X
)
ããX Y
{
åå 
if
çç 
(
çç 
result
çç 
!=
çç 
-
çç 
$num
çç  
)
çç  !
{
éé 
output
èè 
=
èè 
string
èè #
.
èè# $
Format
èè$ *
(
èè* +
$str
èè+ N
,
èèN O
result
èèP V
,
èèV W
connectionTypes
èèX g
)
èèg h
;
èèh i
}
êê 
Invoke
ìì 
(
ìì 
new
ìì 
Action
ìì !
<
ìì! "
string
ìì" (
>
ìì( )
(
ìì) *
UpdateStatusLabel
ìì* ;
)
ìì; <
,
ìì< =
output
ìì> D
)
ììD E
;
ììE F
}
îî 
}
ïï 	
public
óó 
int
óó %
UpdateRecordsInRealTime
óó *
(
óó* +
object
óó+ 1
records
óó2 9
)
óó9 :
{
òò 	
if
ôô 
(
ôô 
!
ôô !
RealTimeModeEnabled
ôô #
)
ôô# $
{
öö 
return
õõ 
$num
õõ 
;
õõ 
}
úú 
if
ûû 
(
ûû 
records
ûû 
is
ûû 
	DataTable
ûû $
data
ûû% )
)
ûû) *
{
üü 
Invoke
°° 
(
°° 
new
°° 
Action
°° !
<
°°! "
DataGridView
°°" .
,
°°. /
object
°°0 6
>
°°6 7
(
°°7 8"
UpdateDataGridSource
°°8 L
)
°°L M
,
°°M N
dataGridView_RT
°°O ^
,
°°^ _
data
°°` d
)
°°d e
;
°°e f
return
¢¢ 
data
¢¢ 
.
¢¢ 
Rows
¢¢  
.
¢¢  !
Count
¢¢! &
;
¢¢& '
}
££ 
return
•• 
-
•• 
$num
•• 
;
•• 
}
¶¶ 	
public
®® 
int
®® %
UpdateRecordsFromSearch
®® *
(
®®* +
object
®®+ 1
records
®®2 9
)
®®9 :
{
©© 	
if
™™ 
(
™™ 
records
™™ 
is
™™ 
	DataTable
™™ $
data
™™% )
)
™™) *
{
´´ 
Invoke
≠≠ 
(
≠≠ 
new
≠≠ 
Action
≠≠ !
<
≠≠! "
DataGridView
≠≠" .
,
≠≠. /
object
≠≠0 6
>
≠≠6 7
(
≠≠7 8"
UpdateDataGridSource
≠≠8 L
)
≠≠L M
,
≠≠M N
dataGridView_DB
≠≠O ^
,
≠≠^ _
data
≠≠` d
)
≠≠d e
;
≠≠e f
return
ÆÆ 
data
ÆÆ 
.
ÆÆ 
Rows
ÆÆ  
.
ÆÆ  !
Count
ÆÆ! &
;
ÆÆ& '
}
ØØ 
return
±± 
-
±± 
$num
±± 
;
±± 
}
≤≤ 	
public
∏∏ 
void
∏∏ "
UpdateDataGridSource
∏∏ (
(
∏∏( )
DataGridView
∏∏) 5
grid
∏∏6 :
,
∏∏: ;
object
∏∏< B
data
∏∏C G
)
∏∏G H
{
ππ 	
grid
∫∫ 
.
∫∫ 

DataSource
∫∫ 
=
∫∫ 
null
∫∫ "
;
∫∫" #
grid
ªª 
.
ªª 

DataSource
ªª 
=
ªª 
data
ªª "
;
ªª" #
}
ºº 	
private
∆∆ 
void
∆∆ -
HandleOnRecordSyncStatusChanged
∆∆ 4
(
∆∆4 5
List
∆∆5 9
<
∆∆9 :
(
∆∆: ;
TelemetryRecord
∆∆; J
record
∆∆K Q
,
∆∆Q R
bool
∆∆S W
isSynced
∆∆X `
)
∆∆` a
>
∆∆a b
recordSyncStatus
∆∆c s
)
∆∆s t
{
«« 	
string
»» 
output
»» 
=
»» 
$"
»» 
{
»» 
recordSyncStatus
»» /
.
»»/ 0
Count
»»0 5
}
»»5 6
$str
»»6 =
{
»»= >
(
»»> ?
recordSyncStatus
»»? O
.
»»O P
Count
»»P U
>
»»V W
$num
»»X Y
?
»»Z [
$str
»»\ b
:
»»c d
$str
»»e m
)
»»m n
}
»»n o
"
»»o p
+
»»q r
$str
…… ;
;
……; <
foreach
ÀÀ 
(
ÀÀ 
(
ÀÀ 
TelemetryRecord
ÀÀ %
record
ÀÀ& ,
,
ÀÀ, -
bool
ÀÀ. 2
isSynced
ÀÀ3 ;
)
ÀÀ; <
in
ÀÀ= ?
recordSyncStatus
ÀÀ@ P
)
ÀÀP Q
{
ÃÃ 
output
ÕÕ 
+=
ÕÕ 
$"
ÕÕ 
{
ÕÕ 
record
ÕÕ #
}
ÕÕ# $
$str
ÕÕ$ )
{
ÕÕ) *
(
ÕÕ* +
!
ÕÕ+ ,
isSynced
ÕÕ, 4
?
ÕÕ5 6
$str
ÕÕ7 <
:
ÕÕ= >
string
ÕÕ? E
.
ÕÕE F
Empty
ÕÕF K
)
ÕÕK L
}
ÕÕL M
$str
ÕÕM f
"
ÕÕf g
;
ÕÕg h
}
ŒŒ 
}
œœ 	
private
’’ 
void
’’ "
HandleOnErrorInModel
’’ )
(
’’) *
string
’’* 0
errorMessage
’’1 =
)
’’= >
{
÷÷ 	
Invoke
◊◊ 
(
◊◊ 
new
◊◊ 
Action
◊◊ 
(
◊◊ 
(
◊◊ 
)
◊◊  
=>
◊◊! #
UpdateStatusLabel
◊◊$ 5
(
◊◊5 6
$str
◊◊6 >
+
◊◊? @
errorMessage
◊◊A M
)
◊◊M N
)
◊◊N O
)
◊◊O P
;
◊◊P Q
}
ÿÿ 	
public
ﬁﬁ 
void
ﬁﬁ 
UpdateStatusLabel
ﬁﬁ %
(
ﬁﬁ% &
string
ﬁﬁ& ,
message
ﬁﬁ- 4
)
ﬁﬁ4 5
{
ﬂﬂ 	
if
‡‡ 
(
‡‡ 
string
‡‡ 
.
‡‡ 
IsNullOrEmpty
‡‡ $
(
‡‡$ %
message
‡‡% ,
)
‡‡, -
)
‡‡- .
{
·· 
message
‚‚ 
=
‚‚ 
$str
‚‚ 
;
‚‚ 
}
„„ 
else
‰‰ 
if
‰‰ 
(
‰‰ 
message
‰‰ 
.
‰‰ 
Length
‰‰ #
>=
‰‰$ &
	Constants
‰‰' 0
.
‰‰0 1
STATUS_MAX_LEN
‰‰1 ?
)
‰‰? @
{
ÂÂ 
message
ÊÊ 
=
ÊÊ 
$str
ÊÊ $
+
ÊÊ% &
message
ÊÊ' .
.
ÊÊ. /
	Substring
ÊÊ/ 8
(
ÊÊ8 9
$num
ÊÊ9 :
,
ÊÊ: ;
	Constants
ÊÊ< E
.
ÊÊE F
STATUS_MAX_LEN
ÊÊF T
)
ÊÊT U
+
ÊÊV W
$str
ÊÊX _
;
ÊÊ_ `
}
ÁÁ 
else
ËË 
{
ÈÈ 
message
ÍÍ 
=
ÍÍ 
$str
ÍÍ $
+
ÍÍ% &
message
ÍÍ' .
;
ÍÍ. /
}
ÎÎ 
this
ÏÏ 
.
ÏÏ 
lbl_statusBar
ÏÏ 
.
ÏÏ 
Visible
ÏÏ &
=
ÏÏ' (
true
ÏÏ) -
;
ÏÏ- .
this
ÌÌ 
.
ÌÌ 
lbl_statusBar
ÌÌ 
.
ÌÌ 
Text
ÌÌ #
=
ÌÌ$ %
message
ÌÌ& -
;
ÌÌ- .
Console
ÔÔ 
.
ÔÔ 
	WriteLine
ÔÔ 
(
ÔÔ 
message
ÔÔ %
)
ÔÔ% &
;
ÔÔ& '
}
 	
private
ÚÚ 
void
ÚÚ -
dataGridView1_DataSourceChanged
ÚÚ 4
(
ÚÚ4 5
object
ÚÚ5 ;
sender
ÚÚ< B
,
ÚÚB C
	EventArgs
ÚÚD M
e
ÚÚN O
)
ÚÚO P
{
ÛÛ 	
Console
ÙÙ 
.
ÙÙ 
	WriteLine
ÙÙ 
(
ÙÙ 
$str
ÙÙ F
)
ÙÙF G
;
ÙÙG H
dataGridView_RT
ıı 
.
ıı 
Update
ıı "
(
ıı" #
)
ıı# $
;
ıı$ %
}
ˆˆ 	
}
˜˜ 
}¯¯ †∏
bC:\Users\msbra\OneDrive\Code\SENG3020-FDMS\SENG3020-FDMS\GroundTerminal\Model\TelemetryDatabase.cs
	namespace

 	
GroundTerminal


 
.

 
Model

 
{ 
partial 
class 
TelemetryDatabase #
:$ %
IRequestHandler& 5
{ 
public 
static 
readonly 
string %
InsertProcedure& 5
=6 7
$str8 O
;O P
public 
static 
readonly 
string %
RecordTable& 1
=2 3
$str4 C
;C D
public$$ 
static$$ 
bool$$ 
UseTestSchema$$ (
=$$) *
false$$+ 0
;$$0 1
public)) 
static)) 
string)) 
Schema)) #
=>))$ &
UseTestSchema))' 4
?))5 6
$str))7 =
:))> ?
$str))@ E
;))E F
public// 
static// 
string// 
ConnectionString// -
{//. /
get/// 2
;//2 3
private//4 ;
set//< ?
;//? @
}//@ A
private44 
const44  
ModelConnectionTypes44 *
ModelConnectionType44+ >
=44? @ 
ModelConnectionTypes44A U
.44U V
Database44V ^
;44^ _
private99 
readonly99 
Type99 
[99 
]99 
validRequestTypes99  1
=992 3
{:: 	
typeof;; 
(;; %
DatabaseConnectionRequest;; ,
);;, -
,;;- .
typeof<< 
(<< 
DatabaseReadRequest<< &
)<<& '
,<<' (
typeof== 
(==  
DatabaseWriteRequest== '
)==' (
,==( )
}>> 	
;>>	 

publicFF 
boolFF 
CanHandleRequestFF $
(FF$ %
IRequestFF% -
requestFF. 5
)FF5 6
{GG 	
returnHH 
validRequestTypesHH $
.HH$ %
ContainsHH% -
(HH- .
requestHH. 5
.HH5 6
GetTypeHH6 =
(HH= >
)HH> ?
)HH? @
;HH@ A
}II 	
publicOO 
voidOO 
HandleRequestOO !
(OO! "
IRequestOO" *
requestOO+ 2
)OO2 3
{PP 	
ifQQ 
(QQ 
requestQQ 
isQQ %
DatabaseConnectionRequestQQ 4
connectQQ5 <
)QQ< =
{RR 
CheckConnectionSS 
(SS  
connectSS  '
)SS' (
;SS( )
}TT 
elseUU 
ifUU 
(UU 
requestUU 
isUU 
DatabaseReadRequestUU  3
readUU4 8
)UU8 9
{VV 
ReadFromDatabaseWW  
(WW  !
readWW! %
)WW% &
;WW& '
}XX 
elseYY 
ifYY 
(YY 
requestYY 
isYY  
DatabaseWriteRequestYY  4
writeYY5 :
)YY: ;
{ZZ 
WriteToDatabase[[ 
([[  
write[[  %
)[[% &
;[[& '
}\\ 
else]] 
{^^ 
request__ 
.__ 
RequestDelegate__ '
.__' (
Invoke__( .
(__. /
this__/ 3
,__3 4
new__5 8
ErrorEventArgs__9 G
(__G H
$str__H w
)__w x
)__x y
;__y z
}`` 
}aa 	
publichh 
voidhh 
CheckConnectionhh #
(hh# $%
DatabaseConnectionRequesthh$ =
connecthh> E
)hhE F
{ii 	
stringjj 
errorMessagejj 
=jj  !
nulljj" &
;jj& '
boolll 

didConnectll 
=ll 
falsell #
;ll# $
ifnn 
(nn 
connectnn 
.nn 
OpenConnectionnn &
)nn& '
{oo 
ifqq 
(qq 
TryOpenqq 
(qq 
(qq 
stringqq #
)qq# $
connectqq$ +
.qq+ ,
ConnectionDataqq, :
,qq: ;
outqq< ?
SqlConnectionqq@ M

connectionqqN X
)qqX Y
)qqY Z
{rr 

connectiontt 
.tt 
Closett $
(tt$ %
)tt% &
;tt& '
ConnectionStringww $
=ww% &
(ww' (
stringww( .
)ww. /
connectww/ 6
.ww6 7
ConnectionDataww7 E
;wwE F

didConnectyy 
=yy  
trueyy! %
;yy% &
}zz 
else{{ 
{|| 
errorMessage}}  
=}}! "
$str}}# K
;}}K L
}~~ 
} 
if
ÅÅ 
(
ÅÅ 

didConnect
ÅÅ 
)
ÅÅ 
{
ÇÇ 
connect
ÉÉ 
.
ÉÉ 
RequestDelegate
ÉÉ '
.
ÉÉ' (
Invoke
ÉÉ( .
(
ÉÉ. /
this
ÉÉ/ 3
,
ÉÉ3 4
new
ÉÉ5 8%
InitializationEventArgs
ÉÉ9 P
(
ÉÉP Q!
ModelConnectionType
ÉÉQ d
,
ÉÉd e
connect
ÉÉf m
.
ÉÉm n
OpenConnection
ÉÉn |
)
ÉÉ| }
)
ÉÉ} ~
;
ÉÉ~ 
}
ÑÑ 
else
ÖÖ 
{
ÜÜ 
connect
áá 
.
áá 
RequestDelegate
áá '
.
áá' (
Invoke
áá( .
(
áá. /
this
áá/ 3
,
áá3 4
new
áá5 8
ErrorEventArgs
áá9 G
(
ááG H
errorMessage
ááH T
)
ááT U
)
ááU V
;
ááV W
}
àà 
}
ââ 	
private
ìì 
void
ìì 
ReadFromDatabase
ìì %
(
ìì% &!
DatabaseReadRequest
ìì& 9
readRequest
ìì: E
)
ììE F
{
îî 	
	DataTable
óó 
records
óó 
=
óó 

GetRecords
óó  *
(
óó* +
readRequest
óó+ 6
.
óó6 7
RecordParameters
óó7 G
)
óóG H
;
óóH I
if
ôô 
(
ôô 
records
ôô 
==
ôô 
null
ôô 
)
ôô  
{
öö 
readRequest
õõ 
.
õõ 
RequestDelegate
õõ +
(
õõ+ ,
this
õõ, 0
,
õõ0 1
new
õõ2 5
ErrorEventArgs
õõ6 D
(
õõD E
$str
õõE h
)
õõh i
)
õõi j
;
õõj k
return
úú 
;
úú 
}
ùù 
readRequest
üü 
.
üü 
RequestDelegate
üü '
(
üü' (
this
üü( ,
,
üü, -
new
üü. 1"
RecordsReadEventArgs
üü2 F
(
üüF G!
ModelConnectionType
üüG Z
,
üüZ [
records
üü\ c
)
üüc d
)
üüd e
;
üüe f
}
†† 	
private
™™ 
void
™™ 
WriteToDatabase
™™ $
(
™™$ %"
DatabaseWriteRequest
™™% 9
writeRequest
™™: F
)
™™F G
{
´´ 	
List
¨¨ 
<
¨¨ 
(
¨¨ 
TelemetryRecord
¨¨ !
record
¨¨" (
,
¨¨( )
bool
¨¨* .
written
¨¨/ 6
)
¨¨6 7
>
¨¨7 8
records
¨¨9 @
=
¨¨A B
new
¨¨C F
List
¨¨G K
<
¨¨K L
(
¨¨L M
TelemetryRecord
¨¨M \
record
¨¨] c
,
¨¨c d
bool
¨¨e i
written
¨¨j q
)
¨¨q r
>
¨¨r s
(
¨¨s t
)
¨¨t u
;
¨¨u v
foreach
ØØ 
(
ØØ 
TelemetryRecord
ØØ $
r
ØØ% &
in
ØØ' )
writeRequest
ØØ* 6
.
ØØ6 7
Records
ØØ7 >
)
ØØ> ?
{
∞∞ 
records
±± 
.
±± 
Add
±± 
(
±± 
(
±± 
r
±± 
,
±± 
Insert
±±  &
(
±±& '
r
±±' (
)
±±( )
)
±±) *
)
±±* +
;
±±+ ,
}
≤≤ 
int
¥¥ "
unwrittenRecordCount
¥¥ $
=
¥¥% &
records
¥¥' .
.
¥¥. /
Count
¥¥/ 4
(
¥¥4 5
x
¥¥5 6
=>
¥¥7 9
!
¥¥: ;
x
¥¥; <
.
¥¥< =
written
¥¥= D
)
¥¥D E
;
¥¥E F
if
∑∑ 
(
∑∑ "
unwrittenRecordCount
∑∑ $
>
∑∑% &
$num
∑∑' (
)
∑∑( )
{
∏∏ 
writeRequest
ππ 
.
ππ 
RequestDelegate
ππ ,
(
ππ, -
this
ππ- 1
,
ππ1 2
new
ππ3 6
ErrorEventArgs
ππ7 E
(
ππE F
$"
ππF H
{
ππH I"
unwrittenRecordCount
ππI ]
}
ππ] ^
$str
ππ^ b
{
ππb c
records
ππc j
.
ππj k
Count
ππk p
}
ππp q
$strππq õ
"ππõ ú
)ππú ù
)ππù û
;ππû ü
}
∫∫ 
writeRequest
ΩΩ 
.
ΩΩ 
RequestDelegate
ΩΩ (
(
ΩΩ( )
this
ΩΩ) -
,
ΩΩ- .
new
ΩΩ/ 2%
RecordsWrittenEventArgs
ΩΩ3 J
(
ΩΩJ K
records
ΩΩK R
)
ΩΩR S
)
ΩΩS T
;
ΩΩT U
}
ææ 	
public
≈≈ 
static
≈≈ 
bool
≈≈ 
Insert
≈≈ !
(
≈≈! "
TelemetryRecord
≈≈" 1
record
≈≈2 8
)
≈≈8 9
{
∆∆ 	
SqlConnection
«« 

connection
«« $
=
««% &
null
««' +
;
««+ ,
SqlTransaction
»» 
transaction
»» &
=
»»' (
null
»») -
;
»»- .
try
   
{
ÀÀ 
if
ÃÃ 
(
ÃÃ 
!
ÃÃ 
TryOpen
ÃÃ 
(
ÃÃ 
ConnectionString
ÃÃ -
,
ÃÃ- .
out
ÃÃ/ 2

connection
ÃÃ3 =
)
ÃÃ= >
)
ÃÃ> ?
{
ÕÕ 
Console
ŒŒ 
.
ŒŒ 
	WriteLine
ŒŒ %
(
ŒŒ% &
$"
ŒŒ& (
$str
ŒŒ( S
{
ŒŒS T
ConnectionString
ŒŒT d
}
ŒŒd e
$str
ŒŒe f
"
ŒŒf g
)
ŒŒg h
;
ŒŒh i
return
–– 
false
––  
;
––  !
}
—— 
Console
”” 
.
”” 
	WriteLine
”” !
(
””! "
$"
””" $
$str
””$ ;
{
””; <

connection
””< F
.
””F G
Database
””G O
}
””O P
$str
””P _
"
””_ `
)
””` a
;
””a b
transaction
’’ 
=
’’ 

connection
’’ (
.
’’( )
BeginTransaction
’’) 9
(
’’9 :
)
’’: ;
;
’’; <

SqlCommand
ÿÿ 
command
ÿÿ "
=
ÿÿ# $
new
ÿÿ% (

SqlCommand
ÿÿ) 3
(
ÿÿ3 4
)
ÿÿ4 5
{
ŸŸ 
CommandText
⁄⁄ 
=
⁄⁄  !
$"
⁄⁄" $
$str
⁄⁄$ %
{
⁄⁄% &
Schema
⁄⁄& ,
}
⁄⁄, -
$str
⁄⁄- 0
{
⁄⁄0 1
InsertProcedure
⁄⁄1 @
}
⁄⁄@ A
$str
⁄⁄A B
"
⁄⁄B C
,
⁄⁄C D
CommandType
€€ 
=
€€  !
CommandType
€€" -
.
€€- .
StoredProcedure
€€. =
,
€€= >

Connection
‹‹ 
=
‹‹  

connection
‹‹! +
,
‹‹+ ,
Transaction
›› 
=
››  !
transaction
››" -
}
ﬁﬁ 
;
ﬁﬁ 
command
·· 
.
·· 

Parameters
·· "
.
··" #
AddWithValue
··# /
(
··/ 0
$str
··0 :
,
··: ;
	SqlDbType
··< E
.
··E F
NVarChar
··F N
)
··N O
.
··O P
Value
··P U
=
··V W
record
··X ^
.
··^ _

TailNumber
··_ i
;
··i j
command
‚‚ 
.
‚‚ 

Parameters
‚‚ "
.
‚‚" #
AddWithValue
‚‚# /
(
‚‚/ 0
$str
‚‚0 <
,
‚‚< =
	SqlDbType
‚‚> G
.
‚‚G H
DateTime
‚‚H P
)
‚‚P Q
.
‚‚Q R
Value
‚‚R W
=
‚‚X Y
record
‚‚Z `
.
‚‚` a
	Timestamp
‚‚a j
;
‚‚j k
command
„„ 
.
„„ 

Parameters
„„ "
.
„„" #
AddWithValue
„„# /
(
„„/ 0
$str
„„0 9
,
„„9 :
	SqlDbType
„„; D
.
„„D E
Float
„„E J
)
„„J K
.
„„K L
Value
„„L Q
=
„„R S
double
„„T Z
.
„„Z [
Parse
„„[ `
(
„„` a
record
„„a g
.
„„g h
AccelX
„„h n
)
„„n o
;
„„o p
command
‰‰ 
.
‰‰ 

Parameters
‰‰ "
.
‰‰" #
AddWithValue
‰‰# /
(
‰‰/ 0
$str
‰‰0 9
,
‰‰9 :
	SqlDbType
‰‰; D
.
‰‰D E
Float
‰‰E J
)
‰‰J K
.
‰‰K L
Value
‰‰L Q
=
‰‰R S
double
‰‰T Z
.
‰‰Z [
Parse
‰‰[ `
(
‰‰` a
record
‰‰a g
.
‰‰g h
AccelY
‰‰h n
)
‰‰n o
;
‰‰o p
command
ÂÂ 
.
ÂÂ 

Parameters
ÂÂ "
.
ÂÂ" #
AddWithValue
ÂÂ# /
(
ÂÂ/ 0
$str
ÂÂ0 9
,
ÂÂ9 :
	SqlDbType
ÂÂ; D
.
ÂÂD E
Float
ÂÂE J
)
ÂÂJ K
.
ÂÂK L
Value
ÂÂL Q
=
ÂÂR S
double
ÂÂT Z
.
ÂÂZ [
Parse
ÂÂ[ `
(
ÂÂ` a
record
ÂÂa g
.
ÂÂg h
AccelZ
ÂÂh n
)
ÂÂn o
;
ÂÂo p
command
ÊÊ 
.
ÊÊ 

Parameters
ÊÊ "
.
ÊÊ" #
AddWithValue
ÊÊ# /
(
ÊÊ/ 0
$str
ÊÊ0 9
,
ÊÊ9 :
	SqlDbType
ÊÊ; D
.
ÊÊD E
Float
ÊÊE J
)
ÊÊJ K
.
ÊÊK L
Value
ÊÊL Q
=
ÊÊR S
double
ÊÊT Z
.
ÊÊZ [
Parse
ÊÊ[ `
(
ÊÊ` a
record
ÊÊa g
.
ÊÊg h
Weight
ÊÊh n
)
ÊÊn o
;
ÊÊo p
command
ÁÁ 
.
ÁÁ 

Parameters
ÁÁ "
.
ÁÁ" #
AddWithValue
ÁÁ# /
(
ÁÁ/ 0
$str
ÁÁ0 ;
,
ÁÁ; <
	SqlDbType
ÁÁ= F
.
ÁÁF G
Float
ÁÁG L
)
ÁÁL M
.
ÁÁM N
Value
ÁÁN S
=
ÁÁT U
double
ÁÁV \
.
ÁÁ\ ]
Parse
ÁÁ] b
(
ÁÁb c
record
ÁÁc i
.
ÁÁi j
Altitude
ÁÁj r
)
ÁÁr s
;
ÁÁs t
command
ËË 
.
ËË 

Parameters
ËË "
.
ËË" #
AddWithValue
ËË# /
(
ËË/ 0
$str
ËË0 8
,
ËË8 9
	SqlDbType
ËË: C
.
ËËC D
Float
ËËD I
)
ËËI J
.
ËËJ K
Value
ËËK P
=
ËËQ R
double
ËËS Y
.
ËËY Z
Parse
ËËZ _
(
ËË_ `
record
ËË` f
.
ËËf g
Pitch
ËËg l
)
ËËl m
;
ËËm n
command
ÈÈ 
.
ÈÈ 

Parameters
ÈÈ "
.
ÈÈ" #
AddWithValue
ÈÈ# /
(
ÈÈ/ 0
$str
ÈÈ0 7
,
ÈÈ7 8
	SqlDbType
ÈÈ9 B
.
ÈÈB C
Float
ÈÈC H
)
ÈÈH I
.
ÈÈI J
Value
ÈÈJ O
=
ÈÈP Q
double
ÈÈR X
.
ÈÈX Y
Parse
ÈÈY ^
(
ÈÈ^ _
record
ÈÈ_ e
.
ÈÈe f
Bank
ÈÈf j
)
ÈÈj k
;
ÈÈk l
int
ÎÎ 
	returnval
ÎÎ 
=
ÎÎ 
command
ÎÎ  '
.
ÎÎ' (
ExecuteNonQuery
ÎÎ( 7
(
ÎÎ7 8
)
ÎÎ8 9
;
ÎÎ9 :
Console
ÌÌ 
.
ÌÌ 
	WriteLine
ÌÌ !
(
ÌÌ! "
$"
ÌÌ" $
$str
ÌÌ$ I
{
ÌÌI J
	returnval
ÌÌJ S
}
ÌÌS T
"
ÌÌT U
)
ÌÌU V
;
ÌÌV W
transaction
ÔÔ 
.
ÔÔ 
Commit
ÔÔ "
(
ÔÔ" #
)
ÔÔ# $
;
ÔÔ$ %
Console
ÒÒ 
.
ÒÒ 
	WriteLine
ÒÒ !
(
ÒÒ! "
$str
ÒÒ" =
)
ÒÒ= >
;
ÒÒ> ?
}
ÚÚ 
catch
ÛÛ 
(
ÛÛ 
	Exception
ÛÛ 
e
ÛÛ 
)
ÛÛ 
{
ÙÙ 
Console
ıı 
.
ıı 
	WriteLine
ıı !
(
ıı! "
e
ıı" #
)
ıı# $
;
ıı$ %
transaction
ˆˆ 
?
ˆˆ 
.
ˆˆ 
Rollback
ˆˆ %
(
ˆˆ% &
)
ˆˆ& '
;
ˆˆ' (
return
¯¯ 
false
¯¯ 
;
¯¯ 
}
˘˘ 
finally
˙˙ 
{
˚˚ 
if
¸¸ 
(
¸¸ 

connection
¸¸ 
?
¸¸ 
.
¸¸  
State
¸¸  %
==
¸¸& (
ConnectionState
¸¸) 8
.
¸¸8 9
Open
¸¸9 =
)
¸¸= >
{
˝˝ 

connection
˛˛ 
.
˛˛ 
Close
˛˛ $
(
˛˛$ %
)
˛˛% &
;
˛˛& '
}
ˇˇ 
}
ÄÄ 
return
ÇÇ 
true
ÇÇ 
;
ÇÇ 
}
ÉÉ 	
public
ãã 
static
ãã 
	DataTable
ãã 

GetRecords
ãã  *
(
ãã* +
RecordParameters
ãã+ ;

parameters
ãã< F
)
ããF G
{
åå 	

SqlCommand
êê 
command
êê 
=
êê  
new
êê! $

SqlCommand
êê% /
(
êê/ 0
)
êê0 1
{
ëë 
CommandText
íí 
=
íí 
$str
íí '
+
íí( )
$str
ìì N
+
ììO P
$str
îî >
+
îî? @
$str
ïï 2
+
ïï3 4
$"
ññ 
$str
ññ 
{
ññ 
Schema
ññ #
}
ññ# $
$str
ññ$ '
{
ññ' (
RecordTable
ññ( 3
}
ññ3 4
$str
ññ4 6
"
ññ6 7
+
ññ8 9
$str
óó =
+
óó> ?
$str
òò 9
+
òò: ;
$str
ôô :
+
ôô; <
$str
öö 3
}
õõ 
;
õõ 
command
úú 
.
úú 

Parameters
úú 
.
úú 
AddWithValue
úú +
(
úú+ ,
$str
úú, 8
,
úú8 9

parameters
úú: D
.
úúD E
	StartDate
úúE N
)
úúN O
;
úúO P
command
ùù 
.
ùù 

Parameters
ùù 
.
ùù 
AddWithValue
ùù +
(
ùù+ ,
$str
ùù, 6
,
ùù6 7

parameters
ùù8 B
.
ùùB C
EndDate
ùùC J
)
ùùJ K
;
ùùK L
command
ûû 
.
ûû 

Parameters
ûû 
.
ûû 
AddWithValue
ûû +
(
ûû+ ,
$str
ûû, =
,
ûû= >
string
ûû? E
.
ûûE F
Format
ûûF L
(
ûûL M
$str
ûûM T
,
ûûT U

parameters
ûûV `
.
ûû` a

TailNumber
ûûa k
)
ûûk l
)
ûûl m
;
ûûm n
return
†† 

GetRecords
†† 
(
†† 
command
†† %
)
††% &
;
††& '
}
°° 	
public
®® 
static
®® 
	DataTable
®® 

GetRecords
®®  *
(
®®* +

SqlCommand
®®+ 5
command
®®6 =
)
®®= >
{
©© 	
SqlConnection
™™ 

connection
™™ $
=
™™% &
null
™™' +
;
™™+ ,
try
¨¨ 
{
≠≠ 
if
ÆÆ 
(
ÆÆ 
!
ÆÆ 
TryOpen
ÆÆ 
(
ÆÆ 
ConnectionString
ÆÆ -
,
ÆÆ- .
out
ÆÆ/ 2

connection
ÆÆ3 =
)
ÆÆ= >
)
ÆÆ> ?
{
ØØ 
Console
∞∞ 
.
∞∞ 
	WriteLine
∞∞ %
(
∞∞% &
$"
∞∞& (
$str
∞∞( S
{
∞∞S T
ConnectionString
∞∞T d
}
∞∞d e
$str
∞∞e f
"
∞∞f g
)
∞∞g h
;
∞∞h i
return
≤≤ 
null
≤≤ 
;
≤≤  
}
≥≥ 
Console
µµ 
.
µµ 
	WriteLine
µµ !
(
µµ! "
$"
µµ" $
$str
µµ$ ;
{
µµ; <

connection
µµ< F
.
µµF G
Database
µµG O
}
µµO P
$str
µµP _
"
µµ_ `
)
µµ` a
;
µµa b
command
∑∑ 
.
∑∑ 

Connection
∑∑ "
=
∑∑# $

connection
∑∑% /
;
∑∑/ 0
using
ππ 
(
ππ 
SqlDataReader
ππ $
reader
ππ% +
=
ππ, -
command
ππ. 5
.
ππ5 6
ExecuteReader
ππ6 C
(
ππC D
)
ππD E
)
ππE F
{
∫∫ 
	DataTable
ªª 
table
ªª #
=
ªª$ %
new
ªª& )
	DataTable
ªª* 3
(
ªª3 4
)
ªª4 5
;
ªª5 6
table
ºº 
.
ºº 
Load
ºº 
(
ºº 
reader
ºº %
)
ºº% &
;
ºº& '
Console
ææ 
.
ææ 
	WriteLine
ææ %
(
ææ% &
$str
ææ& ;
)
ææ; <
;
ææ< =
return
øø 
table
øø  
;
øø  !
}
¿¿ 
}
¡¡ 
catch
¬¬ 
(
¬¬ 
	Exception
¬¬ 
e
¬¬ 
)
¬¬ 
{
√√ 
Console
ƒƒ 
.
ƒƒ 
	WriteLine
ƒƒ !
(
ƒƒ! "
e
ƒƒ" #
)
ƒƒ# $
;
ƒƒ$ %
return
∆∆ 
null
∆∆ 
;
∆∆ 
}
«« 
finally
»» 
{
…… 
if
   
(
   

connection
   
?
   
.
    
State
    %
==
  & (
ConnectionState
  ) 8
.
  8 9
Open
  9 =
)
  = >
{
ÀÀ 

connection
ÃÃ 
.
ÃÃ 
Close
ÃÃ $
(
ÃÃ$ %
)
ÃÃ% &
;
ÃÃ& '
}
ÕÕ 
}
ŒŒ 
}
œœ 	
public
ŸŸ 
static
ŸŸ 
bool
ŸŸ 
TryOpen
ŸŸ "
(
ŸŸ" #
string
ŸŸ# )
connectionString
ŸŸ* :
,
ŸŸ: ;
out
ŸŸ< ?
SqlConnection
ŸŸ@ M

connection
ŸŸN X
)
ŸŸX Y
{
⁄⁄ 	

connection
€€ 
=
€€ 
null
€€ 
;
€€ 
try
›› 
{
ﬁﬁ 

connection
ﬂﬂ 
=
ﬂﬂ 
new
ﬂﬂ  
SqlConnection
ﬂﬂ! .
(
ﬂﬂ. /
connectionString
ﬂﬂ/ ?
)
ﬂﬂ? @
;
ﬂﬂ@ A

connection
‡‡ 
.
‡‡ 
Open
‡‡ 
(
‡‡  
)
‡‡  !
;
‡‡! "
return
‚‚ 
true
‚‚ 
;
‚‚ 
}
„„ 
catch
‰‰ 
(
‰‰ 
	Exception
‰‰ 
)
‰‰ 
{
ÂÂ 
if
ÁÁ 
(
ÁÁ 

connection
ÁÁ 
?
ÁÁ 
.
ÁÁ  
State
ÁÁ  %
==
ÁÁ& (
ConnectionState
ÁÁ) 8
.
ÁÁ8 9
Open
ÁÁ9 =
)
ÁÁ= >
{
ËË 

connection
ÈÈ 
.
ÈÈ 
Close
ÈÈ $
(
ÈÈ$ %
)
ÈÈ% &
;
ÈÈ& '
}
ÍÍ 
return
ÎÎ 
false
ÎÎ 
;
ÎÎ 
}
ÏÏ 
}
ÌÌ 	
}
ÓÓ 
}ÔÔ ∞
aC:\Users\msbra\OneDrive\Code\SENG3020-FDMS\SENG3020-FDMS\GroundTerminal\Controller\IController.cs
	namespace		 	
GroundTerminal		
 
.		 

Controller		 #
{

 
	interface 
IController 
{ 
void 
SetModel 
( 
IModel 
model "
)" #
;# $
void "
ToggleSocketConnection #
(# $
bool$ (
openConnection) 7
)7 8
;8 9
void #
CheckDatabaseConnection $
($ %
bool% )
openConnection* 8
)8 9
;9 :
void## #
ReadRecordsFromDatabase## $
(##$ %
RecordParameters##% 5
recordParameters##6 F
)##F G
;##G H
void)) !
WriteRecordToDatabase)) "
())" #
List))# '
<))' (
TelemetryRecord))( 7
>))7 8
records))9 @
)))@ A
;))A B
event.. '
ModelConnectionStateChanged.. )%
OnConnectionStatusChanged..* C
;..C D
event33 
ReceiveRecords33 
OnRecordsReceived33 .
;33. /
event88 
RecordsSynced88 %
OnRecordSyncStatusChanged88 5
;885 6
event== 
ErrorThrown== 
OnErrorInModel== (
;==( )
}>> 
}?? î
WC:\Users\msbra\OneDrive\Code\SENG3020-FDMS\SENG3020-FDMS\GroundTerminal\Model\IModel.cs
	namespace 	
GroundTerminal
 
. 
Model 
{		 
	interface

 
IModel

 
{ 
void 
HandleRequest 
( 
IRequest #
request$ +
)+ ,
;, -
} 
} ˚
qC:\Users\msbra\OneDrive\Code\SENG3020-FDMS\SENG3020-FDMS\GroundTerminal\EventArguments\InitializationEventArgs.cs
	namespace 	
GroundTerminal
 
. 
EventArguments '
{ 
class		 	#
InitializationEventArgs		
 !
:		" #
	EventArgs		$ -
{

 
public 
readonly  
ModelConnectionTypes ,
ModelConnectionType- @
;@ A
public 
readonly 
bool 
ConnectionOpened -
;- .
public #
InitializationEventArgs &
(& ' 
ModelConnectionTypes' ;
modelConnectionType< O
,O P
boolQ U
connectionOpenedV f
)f g
{ 	
ModelConnectionType 
=  !
modelConnectionType" 5
;5 6
ConnectionOpened 
= 
connectionOpened /
;/ 0
} 	
} 
} ë
\C:\Users\msbra\OneDrive\Code\SENG3020-FDMS\SENG3020-FDMS\GroundTerminal\Requests\IRequest.cs
	namespace 	
GroundTerminal
 
. 
Requests !
{ 
	interface		 
IRequest		 
{

 
RequestDelegate 
RequestDelegate '
{( )
get* -
;- .
}/ 0
} 
} ¥
cC:\Users\msbra\OneDrive\Code\SENG3020-FDMS\SENG3020-FDMS\GroundTerminal\Requests\IRequestHandler.cs
	namespace 	
GroundTerminal
 
. 
Requests !
{ 
	interface 
IRequestHandler 
{ 
bool 
CanHandleRequest 
( 
IRequest &
request' .
). /
;/ 0
void 
HandleRequest 
( 
IRequest #
request$ +
)+ ,
;, -
} 
} Ù
RC:\Users\msbra\OneDrive\Code\SENG3020-FDMS\SENG3020-FDMS\GroundTerminal\IGTView.cs
	namespace 	
GroundTerminal
 
{		 
	interface

 
IGTView

 
{ 
void 
SetController 
( 
IController &

controller' 1
)1 2
;2 3
} 
} ¢
VC:\Users\msbra\OneDrive\Code\SENG3020-FDMS\SENG3020-FDMS\GroundTerminal\Model\Model.cs
	namespace 	
GroundTerminal
 
. 
Model 
{ 
class 	
Model
 
: 
IModel 
, 
IDisposable %
{ 
private 
readonly 
TelemetrySocket (
socket) /
;/ 0
private 
readonly 
List 
< 
IRequestHandler -
>- .
requestHandlers/ >
;> ?
public 
Model 
( 
) 
{ 	
TelemetryDatabase 
databaseConnection 0
=1 2
new3 6
TelemetryDatabase7 H
(H I
)I J
;J K
TelemetrySocket 

testSocket &
=' (
new) ,
TelemetrySocket- <
(< =
)= >
;> ?
requestHandlers 
= 
new !
List" &
<& '
IRequestHandler' 6
>6 7
(7 8
)8 9
{ 
databaseConnection "
," #

testSocket 
} 
; 
socket 
= 

testSocket 
;  
} 	
public## 
void## 
Dispose## 
(## 
)## 
{$$ 	
socket%% 
.%% 
Dispose%% 
(%% 
)%% 
;%% 
}&& 	
public-- 
void-- 
HandleRequest-- !
(--! "
IRequest--" *
request--+ 2
)--2 3
{.. 	
IRequestHandler// 
requestHandler// *
=//+ ,
requestHandlers//- <
.//< =
Find//= A
(//A B
x//B C
=>//D F
x//G H
.//H I
CanHandleRequest//I Y
(//Y Z
request//Z a
)//a b
)//b c
;//c d
if11 
(11 
requestHandler11 
==11 !
null11" &
)11& '
{22 
request33 
.33 
RequestDelegate33 '
.33' (
Invoke33( .
(33. /
this33/ 3
,333 4
new335 8
ErrorEventArgs339 G
(33G H
$"33H J
$str33J v
{33v w
request33w ~
.33~ 
GetType	33 Ü
(
33Ü á
)
33á à
}
33à â
"
33â ä
)
33ä ã
)
33ã å
;
33å ç
return44 
;44 
}55 
requestHandler77 
.77 
HandleRequest77 (
(77( )
request77) 0
)770 1
;771 2
}88 	
}99 
}:: ™
RC:\Users\msbra\OneDrive\Code\SENG3020-FDMS\SENG3020-FDMS\GroundTerminal\Program.cs
	namespace 	
GroundTerminal
 
{ 
static 

class 
Program 
{ 
[ 	
	STAThread	 
] 
static 
void 
Main 
( 
) 
{ 	
using 
( 
Model 
. 
Model 
model $
=% &
new' *
Model+ 0
.0 1
Model1 6
(6 7
)7 8
)8 9
{ 
SimpleLogger 
. 
Log  
.  !%
SetDefaultLogFileLocation! :
(: ;
); <
;< =
SimpleLogger 
. 
TelemetryLog )
.) *'
SetTelemetryLogFileLocation* E
(E F
)F G
;G H

Controller 
. 

Controller %

controller& 0
=1 2
new3 6

Controller7 A
.A B

ControllerB L
(L M
)M N
;N O

controller 
. 
SetModel #
(# $
model$ )
)) *
;* +

controller 
. "
ToggleSocketConnection 1
(1 2
true2 6
)6 7
;7 8
Application 
. 
EnableVisualStyles .
(. /
)/ 0
;0 1
Application 
. -
!SetCompatibleTextRenderingDefault =
(= >
false> C
)C D
;D E
Application 
. 
Run 
(  
new  #
GTS_View$ ,
(, -

controller- 7
)7 8
)8 9
;9 :
} 
}   	
}!! 
}"" Ø
bC:\Users\msbra\OneDrive\Code\SENG3020-FDMS\SENG3020-FDMS\GroundTerminal\Properties\AssemblyInfo.cs
[ 
assembly 	
:	 

AssemblyTitle 
( 
$str )
)) *
]* +
[		 
assembly		 	
:			 

AssemblyDescription		 
(		 
$str		 !
)		! "
]		" #
[

 
assembly

 	
:

	 
!
AssemblyConfiguration

  
(

  !
$str

! #
)

# $
]

$ %
[ 
assembly 	
:	 

AssemblyCompany 
( 
$str 
) 
] 
[ 
assembly 	
:	 

AssemblyProduct 
( 
$str +
)+ ,
], -
[ 
assembly 	
:	 

AssemblyCopyright 
( 
$str 0
)0 1
]1 2
[ 
assembly 	
:	 

AssemblyTrademark 
( 
$str 
)  
]  !
[ 
assembly 	
:	 

AssemblyCulture 
( 
$str 
) 
] 
[ 
assembly 	
:	 


ComVisible 
( 
false 
) 
] 
[ 
assembly 	
:	 

Guid 
( 
$str 6
)6 7
]7 8
[## 
assembly## 	
:##	 

AssemblyVersion## 
(## 
$str## $
)##$ %
]##% &
[$$ 
assembly$$ 	
:$$	 

AssemblyFileVersion$$ 
($$ 
$str$$ (
)$$( )
]$$) *
[%% 
assembly%% 	
:%%	 

InternalsVisibleTo%% 
(%% 
$str%% 4
)%%4 5
]%%5 6
[&& 
assembly&& 	
:&&	 

InternalsVisibleTo&& 
(&& 
$str&& :
)&&: ;
]&&; <Ù
[C:\Users\msbra\OneDrive\Code\SENG3020-FDMS\SENG3020-FDMS\GroundTerminal\RecordParameters.cs
	namespace 	
GroundTerminal
 
{ 
public 

class 
RecordParameters !
{ 
public		 
string		 

TailNumber		  
;		  !
public

 
string

 
	StartDate

 
;

  
public 
string 
EndDate 
; 
} 
} §
bC:\Users\msbra\OneDrive\Code\SENG3020-FDMS\SENG3020-FDMS\GroundTerminal\Requests\RequestBuilder.cs
	namespace		 	
GroundTerminal		
 
.		 
Model		 
{

 
static 

class 
RequestBuilder 
{ 
public 
static 
IRequest  
BuildConnectToSocket 3
(3 4
RequestDelegate4 C(
connectionSuccessfulDelegateD `
,` a
objectb h
connectionDatai w
,w x
RequestDelegate	y à!
readRecordsDelegate
â ú
)
ú ù
{ 	
return 
new )
SocketToggleConnectionRequest 4
(4 5(
connectionSuccessfulDelegate5 Q
,Q R
trueS W
,W X
connectionDataY g
,g h
readRecordsDelegatei |
)| }
;} ~
} 	
public!! 
static!! 
IRequest!! %
BuildDisconnectFromSocket!! 8
(!!8 9
RequestDelegate!!9 H+
disconnectionSuccessfulDelegate!!I h
)!!h i
{"" 	
return## 
new## )
SocketToggleConnectionRequest## 4
(##4 5+
disconnectionSuccessfulDelegate##5 T
,##T U
false##V [
)##[ \
;##\ ]
}$$ 	
public-- 
static-- 
IRequest-- (
BuildCheckDatabaseConnection-- ;
(--; <
RequestDelegate--< K
requestDelegate--L [
,--[ \
bool--] a
openConnection--b p
,--p q
object--r x
connectionData	--y á
)
--á à
{.. 	
return// 
new// %
DatabaseConnectionRequest// 0
(//0 1
requestDelegate//1 @
,//@ A
openConnection//B P
,//P Q
connectionData//R `
)//` a
;//a b
}00 	
public88 
static88 
IRequest88 !
BuildReadFromDatabase88 4
(884 5
RequestDelegate885 D
requestDelegate88E T
,88T U
RecordParameters88V f
recordParameters88g w
)88w x
{99 	
return:: 
new:: 
DatabaseReadRequest:: *
(::* +
requestDelegate::+ :
,::: ;
recordParameters::< L
)::L M
;::M N
};; 	
publicCC 
staticCC 
IRequestCC  
BuildWriteToDatabaseCC 3
(CC3 4
RequestDelegateCC4 C
requestDelegateCCD S
,CCS T
ListCCU Y
<CCY Z
TelemetryRecordCCZ i
>CCi j
recordsCCk r
)CCr s
{DD 	
returnEE 
newEE  
DatabaseWriteRequestEE +
(EE+ ,
requestDelegateEE, ;
,EE; <
recordsEE= D
)EED E
;EEE F
}FF 	
}GG 
}HH ˘
gC:\Users\msbra\OneDrive\Code\SENG3020-FDMS\SENG3020-FDMS\GroundTerminal\Requests\DatabaseReadRequest.cs
	namespace 	
GroundTerminal
 
. 
Requests !
{ 
class 	
DatabaseReadRequest
 
: 
IRequest  (
{ 
public		 
RequestDelegate		 
RequestDelegate		 .
{		/ 0
get		1 4
;		4 5
}		6 7
public 
readonly 
RecordParameters (
RecordParameters) 9
;9 :
public 
DatabaseReadRequest "
(" #
RequestDelegate# 2
requestDelegate3 B
,B C
RecordParametersD T
recordParametersU e
)e f
{ 	
RequestDelegate 
= 
requestDelegate -
;- .
RecordParameters 
= 
recordParameters /
;/ 0
} 	
} 
} È	
mC:\Users\msbra\OneDrive\Code\SENG3020-FDMS\SENG3020-FDMS\GroundTerminal\Requests\DatabaseConnectionRequest.cs
	namespace 	
GroundTerminal
 
. 
Requests !
{ 
class 	%
DatabaseConnectionRequest
 #
:$ %
IRequest& .
{		 
public

 
RequestDelegate

 
RequestDelegate

 .
{

/ 0
get

1 4
;

4 5
}

6 7
public 
readonly 
object 
ConnectionData -
;- .
public 
readonly 
bool 
OpenConnection +
;+ ,
public %
DatabaseConnectionRequest (
(( )
RequestDelegate) 8
requestDelegate9 H
,H I
boolJ N
openConnectionO ]
,] ^
object_ e
connectionDataf t
)t u
{ 	
OpenConnection 
= 
openConnection +
;+ ,
ConnectionData 
= 
connectionData +
;+ ,
RequestDelegate 
= 
requestDelegate -
;- .
} 	
} 
} ∂
hC:\Users\msbra\OneDrive\Code\SENG3020-FDMS\SENG3020-FDMS\GroundTerminal\Requests\DatabaseWriteRequest.cs
	namespace 	
GroundTerminal
 
. 
Requests !
{ 
class

 	 
DatabaseWriteRequest


 
:

  
IRequest

! )
{ 
public 
RequestDelegate 
RequestDelegate .
{/ 0
get1 4
;4 5
}6 7
public 
readonly 
List 
< 
TelemetryRecord ,
>, -
Records. 5
;5 6
public  
DatabaseWriteRequest #
(# $
RequestDelegate$ 3
requestDelegate4 C
,C D
ListE I
<I J
TelemetryRecordJ Y
>Y Z
records[ b
)b c
{ 	
RequestDelegate 
= 
requestDelegate -
;- .
Records 
= 
records 
; 
} 	
} 
} ø
qC:\Users\msbra\OneDrive\Code\SENG3020-FDMS\SENG3020-FDMS\GroundTerminal\Requests\SocketToggleConnectionRequest.cs
	namespace 	
GroundTerminal
 
. 
Requests !
{ 
class 	)
SocketToggleConnectionRequest
 '
:( )
IRequest* 2
{ 
public 
RequestDelegate 
RequestDelegate .
{/ 0
get1 4
;4 5
}6 7
public 
RequestDelegate &
ReadRecordsRequestDelegate 9
{: ;
get< ?
;? @
}A B
public"" 
bool"" 
OpenConnection"" "
{""# $
get""% (
;""( )
}""* +
public(( 
object(( 
ConnectionData(( $
{((% &
get((' *
;((* +
}((, -
public** )
SocketToggleConnectionRequest** ,
(**, -
RequestDelegate**- <
requestDelegate**= L
,**L M
bool**N R
openConnection**S a
,**a b
object**c i
connectionData**j x
=**y z
null**{ 
,	** Ä
RequestDelegate
**Å ê!
readRecordsDelegate
**ë §
=
**• ¶
null
**ß ´
)
**´ ¨
{++ 	
OpenConnection,, 
=,, 
openConnection,, +
;,,+ ,
ConnectionData-- 
=-- 
connectionData-- +
;--+ ,
RequestDelegate.. 
=.. 
requestDelegate.. -
;..- .&
ReadRecordsRequestDelegate// &
=//' (
readRecordsDelegate//) <
;//< =
}00 	
}11 
}22 ¬ã
`C:\Users\msbra\OneDrive\Code\SENG3020-FDMS\SENG3020-FDMS\GroundTerminal\Model\TelemetrySocket.cs
	namespace 	
GroundTerminal
 
{ 
class 	
TelemetrySocket
 
: 
IRequestHandler +
,+ ,
IDisposable- 8
{ 
private 
readonly 
Type 
[ 
] 
validRequestTypes  1
=2 3
{4 5
typeof6 <
(< =)
SocketToggleConnectionRequest= Z
)Z [
}\ ]
;] ^
public  
ModelConnectionTypes #
ModelConnectionType$ 7
=>8 : 
ModelConnectionTypes; O
.O P
SocketP V
;V W
private 
Thread !
currentListenerThread ,
;, -
private 
List 
< 
Thread 
> 
readerThreads *
;* +
private 
const 
int 
PORT_NUMBER %
=& '
$num( -
;- .
public   
TelemetrySocket   
(   
)    
{!! 	
readerThreads"" 
="" 
new"" 
List""  $
<""$ %
Thread""% +
>""+ ,
("", -
)""- .
;"". /
}## 	
public%% 
bool%% 
CanHandleRequest%% $
(%%$ %
IRequest%%% -
request%%. 5
)%%5 6
{&& 	
return'' 
validRequestTypes'' $
.''$ %
Contains''% -
(''- .
request''. 5
.''5 6
GetType''6 =
(''= >
)''> ?
)''? @
;''@ A
}(( 	
public.. 
void.. 
HandleRequest.. !
(..! "
IRequest.." *
request..+ 2
)..2 3
{// 	
if00 
(00 
request00 
is00 )
SocketToggleConnectionRequest00 8
toggleConnection009 I
)00I J
{11 
ToggleConnection22  
(22  !
toggleConnection22! 1
)221 2
;222 3
}33 
else44 
{55 
request66 
.66 
RequestDelegate66 '
.66' (
Invoke66( .
(66. /
this66/ 3
,663 4
new665 8
ErrorEventArgs669 G
(66G H
$str66H u
)66u v
)66v w
;66w x
}77 
}88 	
public@@ 
void@@ 
ToggleConnection@@ $
(@@$ %)
SocketToggleConnectionRequest@@% B
toggleConnection@@C S
)@@S T
{AA 	
ifBB 
(BB 
toggleConnectionBB  
.BB  !
OpenConnectionBB! /
)BB/ 0
{CC 
ifDD 
(DD !
currentListenerThreadDD (
!=DD) +
nullDD, 0
)DD0 1
{EE 
toggleConnectionFF $
.FF$ %
RequestDelegateFF% 4
.FF4 5
InvokeFF5 ;
(FF; <
thisFF< @
,FF@ A
newFFB E
ErrorEventArgsFFF T
(FFT U
$strFFU q
)FFq r
)FFr s
;FFs t
returnGG 
;GG 
}HH 
objectJJ 
connectionDataJJ %
=JJ& '
toggleConnectionJJ( 8
.JJ8 9
ConnectionDataJJ9 G
;JJG H$
ParameterizedThreadStartMM (
tsMM) +
=MM, -
newMM. 1$
ParameterizedThreadStartMM2 J
(MMJ K
ListenerThreadMMK Y
)MMY Z
;MMZ [!
currentListenerThreadNN %
=NN& '
newNN( +
ThreadNN, 2
(NN2 3
tsNN3 5
)NN5 6
;NN6 7!
currentListenerThreadOO %
.OO% &
StartOO& +
(OO+ ,
toggleConnectionOO, <
)OO< =
;OO= >
}PP 
elseQQ 
ifQQ 
(QQ !
currentListenerThreadQQ *
!=QQ+ -
nullQQ. 2
)QQ2 3
{RR 
DisposeSS 
(SS 
)SS 
;SS 
toggleConnectionUU  
.UU  !
RequestDelegateUU! 0
.UU0 1
InvokeUU1 7
(UU7 8
thisUU8 <
,UU< =
newUU> A#
InitializationEventArgsUUB Y
(UUY Z
ModelConnectionTypeUUZ m
,UUm n
falseUUo t
)UUt u
)UUu v
;UUv w
}VV 
}WW 	
publicYY 
voidYY 
DisposeYY 
(YY 
)YY 
{ZZ 	!
currentListenerThread[[ !
.[[! "
Abort[[" '
([[' (
)[[( )
;[[) *!
currentListenerThread]] !
=]]" #
null]]$ (
;]]( )
readerThreads__ 
.__ 
ForEach__ !
(__! "
x__" #
=>__$ &
x__' (
.__( )
Abort__) .
(__. /
)__/ 0
)__0 1
;__1 2
readerThreadsaa 
.aa 
Clearaa 
(aa  
)aa  !
;aa! "
}bb 	
privateii 
voidii 
ListenerThreadii #
(ii# $
objectii$ *
oii+ ,
)ii, -
{jj 	)
SocketToggleConnectionRequestkk )
requestkk* 1
=kk2 3
(kk4 5)
SocketToggleConnectionRequestkk5 R
)kkR S
okkS T
;kkT U
stringmm 
errorStringmm 
=mm  
nullmm! %
;mm% &
tryoo 
{pp 
IPHostEntrytt 

ipHostInfott &
=tt' (
Dnstt) ,
.tt, -
GetHostEntrytt- 9
(tt9 :
Dnstt: =
.tt= >
GetHostNamett> I
(ttI J
)ttJ K
)ttK L
;ttL M
	IPAddressuu 
	ipAddressuu #
=uu$ %

ipHostInfouu& 0
.uu0 1
AddressListuu1 <
[uu< =
$numuu= >
]uu> ?
;uu? @

IPEndPointvv 
localEndPointvv (
=vv) *
newvv+ .

IPEndPointvv/ 9
(vv9 :
	ipAddressvv: C
,vvC D
PORT_NUMBERvvE P
)vvP Q
;vvQ R
Socketyy 
listeneryy 
=yy  !
newyy" %
Socketyy& ,
(yy, -
	ipAddressyy- 6
.yy6 7
AddressFamilyyy7 D
,yyD E

SocketTypezz 
.zz 
Streamzz %
,zz% &
ProtocolTypezz' 3
.zz3 4
Tcpzz4 7
)zz7 8
;zz8 9
try~~ 
{ 
listener
ÄÄ 
.
ÄÄ 
Bind
ÄÄ !
(
ÄÄ! "
localEndPoint
ÄÄ" /
)
ÄÄ/ 0
;
ÄÄ0 1
listener
ÅÅ 
.
ÅÅ 
Listen
ÅÅ #
(
ÅÅ# $
$num
ÅÅ$ &
)
ÅÅ& '
;
ÅÅ' (
while
ÑÑ 
(
ÑÑ 
true
ÑÑ 
)
ÑÑ  
{
ÖÖ 
Console
ÜÜ 
.
ÜÜ  
	WriteLine
ÜÜ  )
(
ÜÜ) *
$str
ÜÜ* N
)
ÜÜN O
;
ÜÜO P
Socket
ââ 
handler
ââ &
=
ââ' (
listener
ââ) 1
.
ââ1 2
Accept
ââ2 8
(
ââ8 9
)
ââ9 :
;
ââ: ;
Console
ãã 
.
ãã  
	WriteLine
ãã  )
(
ãã) *
$str
ãã* D
)
ããD E
;
ããE F&
ParameterizedThreadStart
éé 0
ts
éé1 3
=
éé4 5
new
éé6 9&
ParameterizedThreadStart
éé: R
(
ééR S
ReaderThread
ééS _
)
éé_ `
;
éé` a
Thread
èè 
readerThread
èè +
=
èè, -
new
èè. 1
Thread
èè2 8
(
èè8 9
ts
èè9 ;
)
èè; <
;
èè< =
readerThreads
êê %
.
êê% &
Add
êê& )
(
êê) *
readerThread
êê* 6
)
êê6 7
;
êê7 8
readerThread
ëë $
.
ëë$ %
Start
ëë% *
(
ëë* +
new
ëë+ .
Tuple
ëë/ 4
<
ëë4 5
Socket
ëë5 ;
,
ëë; <
RequestDelegate
ëë= L
>
ëëL M
(
ëëM N
handler
ëëN U
,
ëëU V
request
ëëW ^
.
ëë^ _(
ReadRecordsRequestDelegate
ëë_ y
)
ëëy z
)
ëëz {
;
ëë{ |
request
ìì 
.
ìì  
RequestDelegate
ìì  /
.
ìì/ 0
Invoke
ìì0 6
(
ìì6 7
this
ìì7 ;
,
ìì; <
new
ìì= @%
InitializationEventArgs
ììA X
(
ììX Y!
ModelConnectionType
ììY l
,
ììl m
true
ììn r
)
ììr s
)
ììs t
;
ììt u
}
îî 
}
ïï 
catch
ññ 
(
ññ 
	Exception
ññ  
e
ññ! "
)
ññ" #
{
óó 
Console
òò 
.
òò 
	WriteLine
òò %
(
òò% &
e
òò& '
.
òò' (
ToString
òò( 0
(
òò0 1
)
òò1 2
)
òò2 3
;
òò3 4
errorString
ôô 
=
ôô  !
e
ôô" #
.
ôô# $
ToString
ôô$ ,
(
ôô, -
)
ôô- .
;
ôô. /
}
öö 
}
õõ 
catch
úú 
(
úú 
	Exception
úú 
e
úú 
)
úú 
{
ùù 
Console
ûû 
.
ûû 
	WriteLine
ûû !
(
ûû! "
e
ûû" #
.
ûû# $
ToString
ûû$ ,
(
ûû, -
)
ûû- .
)
ûû. /
;
ûû/ 0
errorString
üü 
=
üü 
e
üü 
.
üü  
ToString
üü  (
(
üü( )
)
üü) *
;
üü* +
}
†† 
if
¢¢ 
(
¢¢ 
!
¢¢ 
string
¢¢ 
.
¢¢ 
IsNullOrEmpty
¢¢ $
(
¢¢$ %
errorString
¢¢% 0
)
¢¢0 1
)
¢¢1 2
{
££ 
request
§§ 
.
§§ 
RequestDelegate
§§ '
.
§§' (
Invoke
§§( .
(
§§. /
this
§§/ 3
,
§§3 4
new
§§5 8
ErrorEventArgs
§§9 G
(
§§G H
errorString
§§H S
)
§§S T
)
§§T U
;
§§U V
}
•• 
}
¶¶ 	
private
¨¨ 
void
¨¨ 
ReaderThread
¨¨ !
(
¨¨! "
object
¨¨" (
o
¨¨) *
)
¨¨* +
{
≠≠ 	
Tuple
ÆÆ 
<
ÆÆ 
Socket
ÆÆ 
,
ÆÆ 
RequestDelegate
ÆÆ )
>
ÆÆ) *
input
ÆÆ+ 0
=
ÆÆ1 2
(
ÆÆ3 4
Tuple
ÆÆ4 9
<
ÆÆ9 :
Socket
ÆÆ: @
,
ÆÆ@ A
RequestDelegate
ÆÆB Q
>
ÆÆQ R
)
ÆÆR S
o
ÆÆS T
;
ÆÆT U
Socket
∞∞ 
handler
∞∞ 
=
∞∞ 
input
∞∞ "
.
∞∞" #
Item1
∞∞# (
;
∞∞( )
RequestDelegate
±± 
request
±± #
=
±±$ %
input
±±& +
.
±±+ ,
Item2
±±, 1
;
±±1 2
string
≥≥ 
data
≥≥ 
=
≥≥ 
null
≥≥ 
;
≥≥ 
byte
∂∂ 
[
∂∂ 
]
∂∂ 
bytes
∂∂ 
=
∂∂ 
new
∂∂ 
byte
∂∂ #
[
∂∂# $
$num
∂∂$ (
]
∂∂( )
;
∂∂) *
try
∏∏ 
{
ππ 
while
ªª 
(
ªª 
true
ªª 
)
ªª 
{
ºº 
int
ΩΩ 
bytesRec
ΩΩ  
=
ΩΩ! "
handler
ΩΩ# *
.
ΩΩ* +
Receive
ΩΩ+ 2
(
ΩΩ2 3
bytes
ΩΩ3 8
)
ΩΩ8 9
;
ΩΩ9 :
if
¿¿ 
(
¿¿ 
bytesRec
¿¿ 
==
¿¿  "
$num
¿¿# $
)
¿¿$ %
{
¡¡ 
break
¬¬ 
;
¬¬ 
}
√√ 
data
≈≈ 
+=
≈≈ 
Encoding
≈≈ $
.
≈≈$ %
ASCII
≈≈% *
.
≈≈* +
	GetString
≈≈+ 4
(
≈≈4 5
bytes
≈≈5 :
,
≈≈: ;
$num
≈≈< =
,
≈≈= >
bytesRec
≈≈? G
)
≈≈G H
;
≈≈H I
Serialization
…… !
serialization
……" /
=
……0 1
new
……2 5
Serialization
……6 C
(
……C D
)
……D E
;
……E F

DataPacket
ÀÀ 
packet
ÀÀ %
=
ÀÀ& '
(
ÀÀ( )

DataPacket
ÀÀ) 3
)
ÀÀ3 4
serialization
ÀÀ4 A
.
ÀÀA B
ByteArrayToObject
ÀÀB S
(
ÀÀS T
bytes
ÀÀT Y
)
ÀÀY Z
;
ÀÀZ [
TelemetryRecord
ÕÕ #
record
ÕÕ$ *
=
ÕÕ+ ,

ReadPacket
ÕÕ- 7
(
ÕÕ7 8
packet
ÕÕ8 >
)
ÕÕ> ?
;
ÕÕ? @ 
ChecksumCalculator
œœ &

calculator
œœ' 1
=
œœ2 3
new
œœ4 7 
ChecksumCalculator
œœ8 J
(
œœJ K
)
œœK L
;
œœL M
int
—— 
checksum
——  
=
——! "
$num
——# $
;
——$ %

calculator
”” 
.
”” 
CalculateChecksum
”” 0
(
””0 1
ref
””1 4
checksum
””5 =
,
””= >
ref
””? B
record
””C I
.
””I J
Altitude
””J R
,
””R S
ref
””T W
record
””X ^
.
””^ _
Pitch
””_ d
,
””d e
ref
””f i
record
””j p
.
””p q
Bank
””q u
)
””u v
;
””v w
if
’’ 
(
’’ 
checksum
’’  
==
’’! #
packet
’’$ *
.
’’* +
Trailer
’’+ 2
.
’’2 3
Checksum
’’3 ;
)
’’; <
{
÷÷ 
request
◊◊ 
?
◊◊  
.
◊◊  !
Invoke
◊◊! '
(
◊◊' (
this
◊◊( ,
,
◊◊, -
new
◊◊. 1"
RecordsReadEventArgs
◊◊2 F
(
◊◊F G!
ModelConnectionType
◊◊G Z
,
◊◊Z [
new
◊◊\ _
List
◊◊` d
<
◊◊d e
TelemetryRecord
◊◊e t
>
◊◊t u
(
◊◊u v
)
◊◊v w
{
◊◊x y
record◊◊z Ä
}◊◊Å Ç
)◊◊Ç É
)◊◊É Ñ
;◊◊Ñ Ö
Console
ÿÿ 
.
ÿÿ  
	WriteLine
ÿÿ  )
(
ÿÿ) *
$str
ÿÿ* B
)
ÿÿB C
;
ÿÿC D
}
ŸŸ 
else
⁄⁄ 
{
€€ 
Console
‹‹ 
.
‹‹  
	WriteLine
‹‹  )
(
‹‹) *
$str
‹‹* <
)
‹‹< =
;
‹‹= >
}
›› 
}
ﬁﬁ 
}
ﬂﬂ 
catch
‡‡ 
(
‡‡ 
	Exception
‡‡ 
e
‡‡ 
)
‡‡ 
{
·· 
SimpleLogger
‚‚ 
.
‚‚ 
Log
‚‚  
.
‚‚  !
Except
‚‚! '
(
‚‚' (
e
‚‚( )
)
‚‚) *
;
‚‚* +
}
„„ 
finally
‰‰ 
{
ÂÂ 
handler
ÊÊ 
?
ÊÊ 
.
ÊÊ 
Shutdown
ÊÊ !
(
ÊÊ! "
SocketShutdown
ÊÊ" 0
.
ÊÊ0 1
Both
ÊÊ1 5
)
ÊÊ5 6
;
ÊÊ6 7
handler
ÁÁ 
?
ÁÁ 
.
ÁÁ 
Close
ÁÁ 
(
ÁÁ 
)
ÁÁ  
;
ÁÁ  !
}
ËË 
}
ÈÈ 	
private
ÎÎ 
static
ÎÎ 
TelemetryRecord
ÎÎ &

ReadPacket
ÎÎ' 1
(
ÎÎ1 2

DataPacket
ÎÎ2 <
packet
ÎÎ= C
)
ÎÎC D
{
ÏÏ 	
TelemetryRecord
ÌÌ 
output
ÌÌ "
=
ÌÌ# $
new
ÌÌ% (
TelemetryRecord
ÌÌ) 8
(
ÌÌ8 9
)
ÌÌ9 :
;
ÌÌ: ;
output
ÔÔ 
.
ÔÔ 

TailNumber
ÔÔ 
=
ÔÔ 
packet
ÔÔ  &
.
ÔÔ& '
Header
ÔÔ' -
.
ÔÔ- .

TailNumber
ÔÔ. 8
;
ÔÔ8 9
output
ÒÒ 
.
ÒÒ 
	Timestamp
ÒÒ 
=
ÒÒ 
TimeConverter
ÒÒ ,
.
ÒÒ, -%
ConvertToDatabaseFormat
ÒÒ- D
(
ÒÒD E
packet
ÒÒE K
.
ÒÒK L
Body
ÒÒL P
.
ÒÒP Q
	Timestamp
ÒÒQ Z
)
ÒÒZ [
;
ÒÒ[ \
output
ÚÚ 
.
ÚÚ 
AccelX
ÚÚ 
=
ÚÚ 
packet
ÚÚ "
.
ÚÚ" #
Body
ÚÚ# '
.
ÚÚ' (
AccelX
ÚÚ( .
;
ÚÚ. /
output
ÛÛ 
.
ÛÛ 
AccelY
ÛÛ 
=
ÛÛ 
packet
ÛÛ "
.
ÛÛ" #
Body
ÛÛ# '
.
ÛÛ' (
AccelY
ÛÛ( .
;
ÛÛ. /
output
ÙÙ 
.
ÙÙ 
AccelZ
ÙÙ 
=
ÙÙ 
packet
ÙÙ "
.
ÙÙ" #
Body
ÙÙ# '
.
ÙÙ' (
AccelZ
ÙÙ( .
;
ÙÙ. /
output
ıı 
.
ıı 
Weight
ıı 
=
ıı 
packet
ıı "
.
ıı" #
Body
ıı# '
.
ıı' (
Weight
ıı( .
;
ıı. /
output
ˆˆ 
.
ˆˆ 
Altitude
ˆˆ 
=
ˆˆ 
packet
ˆˆ $
.
ˆˆ$ %
Body
ˆˆ% )
.
ˆˆ) *
Altitude
ˆˆ* 2
;
ˆˆ2 3
output
˜˜ 
.
˜˜ 
Pitch
˜˜ 
=
˜˜ 
packet
˜˜ !
.
˜˜! "
Body
˜˜" &
.
˜˜& '
Pitch
˜˜' ,
;
˜˜, -
output
¯¯ 
.
¯¯ 
Bank
¯¯ 
=
¯¯ 
packet
¯¯  
.
¯¯  !
Body
¯¯! %
.
¯¯% &
Bank
¯¯& *
;
¯¯* +
return
˚˚ 
output
˚˚ 
;
˚˚ 
}
¸¸ 	
}
˝˝ 
}˛˛ 